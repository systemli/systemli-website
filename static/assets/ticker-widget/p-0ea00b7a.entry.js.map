{"version":3,"names":["_typeof","o","Symbol","iterator","constructor","prototype","toInteger","dirtyNumber","NaN","number","Number","isNaN","Math","ceil","floor","requiredArgs","required","args","length","TypeError","toDate","argument","arguments","argStr","Object","toString","call","Date","getTime","console","warn","Error","stack","addMilliseconds","dirtyDate","dirtyAmount","timestamp","amount","defaultOptions","getDefaultOptions","getTimezoneOffsetInMilliseconds","date","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","compareAsc","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","diff","isDate","value","isValid","differenceInCalendarMonths","yearDiff","monthDiff","differenceInMilliseconds","roundingMap","round","trunc","defaultRoundingMethod","getRoundingMethod","method","endOfDay","setHours","endOfMonth","month","setFullYear","isLastDayOfMonth","differenceInMonths","sign","difference","abs","result","setDate","setMonth","isLastMonthNotFull","differenceInSeconds","options","roundingMethod","subMilliseconds","MILLISECONDS_IN_DAY","getUTCDayOfYear","setUTCMonth","setUTCHours","startOfYearTimestamp","startOfUTCISOWeek","weekStartsOn","day","getUTCDay","setUTCDate","getUTCDate","getUTCISOWeekYear","year","getUTCFullYear","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_WEEK","getUTCISOWeek","startOfUTCWeek","_ref","_ref2","_ref3","_options$weekStartsOn","_options$locale","_options$locale$optio","_defaultOptions$local","_defaultOptions$local2","locale","RangeError","getUTCWeekYear","_options$firstWeekCon","firstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","getUTCWeek","addLeadingZeros","targetLength","output","formatters","y","token","signedYear","M","getUTCMonth","String","d","a","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","fractionalSeconds","pow","formatters$3","dayPeriodEnum","am","pm","midnight","noon","morning","afternoon","evening","night","G","localize","era","width","ordinalNumber","unit","lightFormatters","Y","signedWeekYear","weekYear","twoDigitYear","R","isoWeekYear","u","Q","quarter","context","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","e","localDayOfWeek","c","i","isoDayOfWeek","hours","dayPeriod","toLowerCase","b","B","K","k","X","_localize","originalDate","_originalDate","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","dirtyDelimiter","absOffset","minutes","delimiter","formatters$1","dateLongFormatter","pattern","formatLong","timeLongFormatter","time","dateTimeLongFormatter","matchResult","match","datePattern","timePattern","dateTimeFormat","dateTime","replace","longFormatters","p","P","longFormatters$1","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","format","input","concat","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","count","tokenValue","addSuffix","comparison","formatDistance$2","buildFormatLongFn","undefined","defaultWidth","formats","dateFormats","full","long","medium","short","timeFormats","dateTimeFormats","formatLong$1","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","formatRelative","_date","_baseDate","_options","formatRelative$1","buildLocalizeFn","dirtyIndex","valuesArray","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","index","argumentCallback","eraValues","narrow","abbreviated","wide","quarterValues","monthValues","dayValues","dayPeriodValues","formattingDayPeriodValues","rem100","localize$1","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchedString","parsePatterns","defaultParseWidth","key","Array","isArray","findIndex","test","findKey","valueCallback","rest","slice","object","predicate","hasOwnProperty","array","buildMatchPatternFn","parseResult","parsePattern","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","any","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","parseInt","match$1","code","defaultLocale","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","_ref4","_options$locale2","_options$locale2$opti","_ref5","_ref6","_ref7","_options$locale3","_options$locale3$opti","_defaultOptions$local3","_defaultOptions$local4","formatStr","formatterOptions","map","substring","firstCharacter","longFormatter","join","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","matched","assign","target","property","cloneObject","MINUTES_IN_DAY","MINUTES_IN_ALMOST_TWO_DAYS","MINUTES_IN_MONTH","MINUTES_IN_TWO_MONTHS","dirtyBaseDate","localizeOptions","Boolean","seconds","offsetInSeconds","months","includeSeconds","days","nearestMonth","monthsSinceStartOfYear","years","tickerTimelineCss","TickerTimelineStyle0","TickerTimeline","connectedCallback","fetch","this","apiUrl","domain","limit","then","response","json","items","data","messages","catch","error","message","headline","header","class","href","attachments","attachment","src","url","content","text","paragraphs","split","paragraph","render","Host","item","createdAt","title"],"sources":["node_modules/@babel/runtime/helpers/esm/typeof.js","node_modules/date-fns/esm/_lib/toInteger/index.js","node_modules/date-fns/esm/_lib/requiredArgs/index.js","node_modules/date-fns/esm/toDate/index.js","node_modules/date-fns/esm/addMilliseconds/index.js","node_modules/date-fns/esm/_lib/defaultOptions/index.js","node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","node_modules/date-fns/esm/compareAsc/index.js","node_modules/date-fns/esm/isDate/index.js","node_modules/date-fns/esm/isValid/index.js","node_modules/date-fns/esm/differenceInCalendarMonths/index.js","node_modules/date-fns/esm/differenceInMilliseconds/index.js","node_modules/date-fns/esm/_lib/roundingMethods/index.js","node_modules/date-fns/esm/endOfDay/index.js","node_modules/date-fns/esm/endOfMonth/index.js","node_modules/date-fns/esm/isLastDayOfMonth/index.js","node_modules/date-fns/esm/differenceInMonths/index.js","node_modules/date-fns/esm/differenceInSeconds/index.js","node_modules/date-fns/esm/subMilliseconds/index.js","node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","node_modules/date-fns/esm/_lib/getUTCWeek/index.js","node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","node_modules/date-fns/esm/_lib/format/formatters/index.js","node_modules/date-fns/esm/_lib/format/longFormatters/index.js","node_modules/date-fns/esm/_lib/protectedTokens/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","node_modules/date-fns/esm/locale/en-US/index.js","node_modules/date-fns/esm/format/index.js","node_modules/date-fns/esm/_lib/assign/index.js","node_modules/date-fns/esm/_lib/cloneObject/index.js","node_modules/date-fns/esm/formatDistance/index.js","src/components/ticker-timeline/ticker-timeline.css?tag=ticker-timeline","src/components/ticker-timeline/ticker-timeline.tsx"],"sourcesContent":["export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n  var number = Number(dirtyNumber);\n  if (isNaN(number)) {\n    return number;\n  }\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (argument instanceof Date || _typeof(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n      // eslint-disable-next-line no-console\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","var defaultOptions = {};\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n    // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || _typeof(value) === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport default function differenceInMilliseconds(dateLeft, dateRight) {\n  requiredArgs(2, arguments);\n  return toDate(dateLeft).getTime() - toDate(dateRight).getTime();\n}","var roundingMap = {\n  ceil: Math.ceil,\n  round: Math.round,\n  floor: Math.floor,\n  trunc: function trunc(value) {\n    return value < 0 ? Math.ceil(value) : Math.floor(value);\n  } // Math.trunc is not supported by IE\n};\n\nvar defaultRoundingMethod = 'trunc';\nexport function getRoundingMethod(method) {\n  return method ? roundingMap[method] : roundingMap[defaultRoundingMethod];\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport endOfDay from \"../endOfDay/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates using trunc as a default rounding method.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result;\n\n  // Check for the difference of less than month\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference);\n\n    // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;\n\n    // Check for cases of one full calendar month\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n    result = sign * (difference - Number(isLastMonthNotFull));\n  }\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport default function differenceInSeconds(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dateLeft, dateRight) / 1000;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}","import addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000;\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nimport { getDefaultOptions } from \"../defaultOptions/index.js\";\nexport default function startOfUTCWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nimport { getDefaultOptions } from \"../defaultOptions/index.js\";\nexport default function getUTCWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var defaultOptions = getDefaultOptions();\n  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, options);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, options);\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\";\nimport { getDefaultOptions } from \"../defaultOptions/index.js\";\nexport default function startOfUTCWeekYear(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);\n  var year = getUTCWeekYear(dirtyDate, options);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, options);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000;\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime();\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\nvar formatters = {\n  // Year\n  y: function y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    var signedYear = date.getUTCFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function M(date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function d(date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function a(date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n      case 'aaa':\n        return dayPeriodEnumValue;\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function m(date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function s(date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nimport lightFormatters from \"../lightFormatters/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize) {\n    var month = date.getUTCMonth();\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize) {\n    var month = date.getUTCMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function D(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function s(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, dirtyDelimiter);\n}\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\nexport default formatters;","var dateLongFormatter = function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n};\nvar timeLongFormatter = function timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n};\nvar dateTimeLongFormatter = function dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n  var dateTimeFormat;\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n};\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\"));\n  }\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nvar formatDistance = function formatDistance(token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n  return result;\n};\nexport default formatDistance;","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nvar formatRelative = function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\nexport default formatRelative;","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, options) {\n    var context = options !== null && options !== void 0 && options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\nvar ordinalNumber = function ordinalNumber(dirtyNumber, _options) {\n  var number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n      case 2:\n        return number + 'nd';\n      case 3:\n        return number + 'rd';\n    }\n  }\n  return number + 'th';\n};\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n    if (!matchResult) {\n      return null;\n    }\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import isValid from \"../isValid/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport defaultLocale from \"../_lib/defaultLocale/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, options) {\n  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  var firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale2 = options.locale) === null || _options$locale2 === void 0 ? void 0 : (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);\n\n  // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale3 = options.locale) === null || _options$locale3 === void 0 ? void 0 : (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions.locale) === null || _defaultOptions$local3 === void 0 ? void 0 : (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n  var originalDate = toDate(dirtyDate);\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong);\n    }\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n    var firstCharacter = substring[0];\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n    var formatter = formatters[firstCharacter];\n    if (formatter) {\n      if (!(options !== null && options !== void 0 && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));\n      }\n      if (!(options !== null && options !== void 0 && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, String(dirtyDate));\n      }\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n    return substring;\n  }).join('');\n  return result;\n}\nfunction cleanEscapedString(input) {\n  var matched = input.match(escapedStringRegExp);\n  if (!matched) {\n    return input;\n  }\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}","export default function assign(target, object) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n  for (var property in object) {\n    if (Object.prototype.hasOwnProperty.call(object, property)) {\n      ;\n      target[property] = object[property];\n    }\n  }\n  return target;\n}","import assign from \"../assign/index.js\";\nexport default function cloneObject(object) {\n  return assign({}, object);\n}","import { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport defaultLocale from \"../_lib/defaultLocale/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate, options) {\n  var _ref, _options$locale;\n  requiredArgs(2, arguments);\n  var defaultOptions = getDefaultOptions();\n  var locale = (_ref = (_options$locale = options === null || options === void 0 ? void 0 : options.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions.locale) !== null && _ref !== void 0 ? _ref : defaultLocale;\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n  var localizeOptions = assign(cloneObject(options), {\n    addSuffix: Boolean(options === null || options === void 0 ? void 0 : options.addSuffix),\n    comparison: comparison\n  });\n  var dateLeft;\n  var dateRight;\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months;\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options !== null && options !== void 0 && options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    }\n\n    // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions);\n\n    // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions);\n\n    // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions);\n\n    // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions);\n\n    // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions);\n\n    // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n  months = differenceInMonths(dateRight, dateLeft);\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions);\n\n    // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12);\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions);\n\n      // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions);\n\n      // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}",".ticker-timeline__headline {\n  margin: 0;\n  padding-top: 1rem;\n  padding-bottom: 0rem;\n}\n\n.ticker-timeline__subheadline {\n  padding-bottom: 1rem;\n  margin-top: 0rem;\n  margin-bottom: 0rem;\n  border-bottom: 1px solid #000;\n}\n\n.ticker-timeline__entry {\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid #000;\n}\n\n.ticker-timeline__entry:last-child {\n  border-bottom: none;\n}\n\n.ticker-timeline__paragraph {\n  margin: 0;\n  padding-top: 0;\n  padding-bottom: 0.75rem;\n}\n\n.ticker-timeline__attachment {\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n}\n\n.ticker-timeline__attachment img {\n  max-width: 100%;\n  height: auto;\n}\n\n.ticker-timeline__date {\n  font-size: 0.75rem;\n}\n","import { Component, Host, Prop, State, h } from '@stencil/core';\nimport { format, formatDistance } from 'date-fns';\n\ntype Response = {\n  data: MessageResponse;\n  status: string;\n};\n\ntype MessageResponse = {\n  messages: Array<Message>;\n};\n\ntype Message = {\n  id: number;\n  createdAt: string;\n  text: string;\n  geoInformation: string;\n  attachments: Array<Attachment>;\n};\n\ntype Attachment = {\n  url: string;\n  contentType: string;\n};\n\n@Component({\n  tag: 'ticker-timeline',\n  styleUrl: 'ticker-timeline.css',\n  shadow: false,\n})\nexport class TickerTimeline {\n  @State() items: Array<Message> = [];\n  @State() error: string = '';\n\n  @Prop() header: string = '';\n\n  @Prop() domain: string;\n\n  @Prop() apiUrl: string = 'https://ticker-api.systemli.org';\n\n  @Prop() limit: number = 10;\n\n  async connectedCallback() {\n    fetch(`${this.apiUrl}/v1/timeline?origin=${this.domain}&limit=${this.limit}`)\n      .then(response => response.json())\n      .then((response: Response) => {\n        this.items = response.data.messages;\n      })\n      .catch(error => {\n        this.error = error.message;\n      });\n  }\n\n  headline(header: string) {\n    if (header === '') {\n      return;\n    }\n\n    return (\n      <div>\n        <h2 class=\"ticker-timeline__headline\">{header}</h2>\n        <p class=\"ticker-timeline__subheadline\">\n          from <a href={'https://' + this.domain}>{this.domain}</a>\n        </p>\n      </div>\n    );\n  }\n\n  attachments(attachments: Array<Attachment>) {\n    return (\n      <div>\n        {attachments.map(attachment => (\n          <div class=\"ticker-timeline__attachment\">\n            <img src={attachment.url} />\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  content(text: string) {\n    const paragraphs = text.split('\\n');\n\n    return (\n      <div>\n        {paragraphs.map(paragraph => (\n          <p class=\"ticker-timeline__paragraph\">{paragraph}</p>\n        ))}\n      </div>\n    );\n  }\n\n  render() {\n    if (this.error !== '') {\n      return (\n        <Host class=\"ticker-timeline\">\n          {this.headline(this.header)}\n          <div class=\"ticker-timeline__error\">\n            <p>Sorry, unable to fetch messages.</p>\n          </div>\n        </Host>\n      );\n    }\n\n    if (this.items.length === 0) {\n      return (\n        <Host class=\"ticker-timeline\">\n          {this.headline(this.header)}\n          <div class=\"ticker-timeline__error\">\n            <p>No messages found.</p>\n          </div>\n        </Host>\n      );\n    }\n\n    return (\n      <Host class=\"ticker-timeline\">\n        {this.headline(this.header)}\n        {this.items.map(item => (\n          <div class=\"ticker-timeline__entry\">\n            {this.content(item.text)}\n            {item.attachments !== null && this.attachments(item.attachments)}\n            <time class=\"ticker-timeline__date\" dateTime={item.createdAt} title={format(new Date(item.createdAt), 'MMM d, y h:mm')}>\n              {formatDistance(new Date(item.createdAt), new Date(), { addSuffix: true })}\n            </time>\n          </div>\n        ))}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}