{"version":3,"names":["millisecondsInWeek","millisecondsInDay","minutesInMonth","minutesInDay","constructFromSymbol","Symbol","for","constructFrom","date","value","Date","constructor","toDate","argument","context","defaultOptions","getDefaultOptions","startOfWeek","options","weekStartsOn","locale","_date","in","day","getDay","diff","setDate","getDate","setHours","startOfISOWeek","getISOWeekYear","year","getFullYear","fourthOfJanuaryOfNextYear","setFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","getTimezoneOffsetInMilliseconds","utcDate","UTC","getMonth","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","normalizeDates","dates","normalize","bind","find","map","startOfDay","differenceInCalendarDays","laterDate","earlierDate","laterDate_","earlierDate_","laterStartOfDay","earlierStartOfDay","laterTimestamp","earlierTimestamp","Math","round","startOfISOWeekYear","fourthOfJanuary","compareAsc","dateLeft","dateRight","isDate","Object","prototype","toString","call","isValid","isNaN","differenceInCalendarMonths","yearsDiff","monthsDiff","getRoundingMethod","method","number","trunc","result","differenceInMilliseconds","endOfDay","endOfMonth","month","isLastDayOfMonth","differenceInMonths","workingLaterDate","sign","difference","abs","setMonth","isLastMonthNotFull","differenceInSeconds","roundingMethod","startOfYear","date_","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","token","count","tokenValue","replace","addSuffix","comparison","buildFormatLongFn","args","width","String","defaultWidth","format","formats","dateFormats","full","long","medium","short","timeFormats","dateTimeFormats","formatLong","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","formatRelative","_baseDate","_options","buildLocalizeFn","valuesArray","formattingValues","defaultFormattingWidth","values","index","argumentCallback","eraValues","narrow","abbreviated","wide","quarterValues","monthValues","dayValues","dayPeriodValues","am","pm","midnight","noon","morning","afternoon","evening","night","formattingDayPeriodValues","ordinalNumber","dirtyNumber","Number","rem100","localize","era","quarter","dayPeriod","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","key","Array","isArray","findIndex","pattern","test","findKey","valueCallback","rest","slice","length","object","predicate","hasOwnProperty","undefined","array","buildMatchPatternFn","parseResult","parsePattern","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","any","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","parseInt","enUS","code","firstWeekContainsDate","getDayOfYear","dayOfYear","getISOWeek","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","startOfWeekYear","firstWeek","getWeek","addLeadingZeros","targetLength","output","padStart","lightFormatters","y","signedYear","M","d","a","dayPeriodEnumValue","toUpperCase","h","H","m","s","S","numberOfDigits","milliseconds","fractionalSeconds","pow","dayPeriodEnum","formatters","G","unit","Y","signedWeekYear","weekYear","twoDigitYear","R","isoWeekYear","u","Q","ceil","q","L","w","week","I","isoWeek","D","E","dayOfWeek","e","localDayOfWeek","c","i","isoDayOfWeek","hours","toLowerCase","b","B","K","k","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","timestamp","T","offset","delimiter","absOffset","minutes","dateLongFormatter","timeLongFormatter","dateTimeLongFormatter","datePattern","timePattern","dateTimeFormat","longFormatters","p","P","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","warnOrThrowProtectedError","input","_message","message","console","warn","includes","RangeError","subject","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","formatStr","defaultLocale","originalDate","parts","substring","firstCharacter","longFormatter","join","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","formatter","matched","minutesInAlmostTwoDays","localizeOptions","assign","seconds","offsetInSeconds","months","includeSeconds","days","nearestMonth","monthsSinceStartOfYear","years","encodedTlds","encodedUtlds","target","properties","numeric","ascii","alpha","asciinumeric","alphanumeric","domain","emoji","scheme","slashscheme","whitespace","registerGroup","name","groups","addToGroups","flags","group","indexOf","push","flagsForToken","State","this","j","jr","jd","accepts","go","state","nextState","regex","has","exactOnly","ta","inputs","next","tt","tr","regexp","ts","len","templateState","apply","allFlags","WORD","UWORD","ASCIINUMERICAL","ALPHANUMERICAL","LOCALHOST","TLD","UTLD","SCHEME","SLASH_SCHEME","NUM","WS","NL","OPENBRACE","CLOSEBRACE","OPENBRACKET","CLOSEBRACKET","OPENPAREN","CLOSEPAREN","OPENANGLEBRACKET","CLOSEANGLEBRACKET","FULLWIDTHLEFTPAREN","FULLWIDTHRIGHTPAREN","LEFTCORNERBRACKET","RIGHTCORNERBRACKET","LEFTWHITECORNERBRACKET","RIGHTWHITECORNERBRACKET","FULLWIDTHLESSTHAN","FULLWIDTHGREATERTHAN","AMPERSAND","APOSTROPHE","ASTERISK","AT","BACKSLASH","BACKTICK","CARET","COLON","COMMA","DOLLAR","DOT","EQUALS","EXCLAMATION","HYPHEN","PERCENT","PIPE","PLUS","POUND","QUERY","QUOTE","FULLWIDTHMIDDLEDOT","SEMI","SLASH","TILDE","UNDERSCORE","EMOJI$1","SYM","tk","freeze","__proto__","EMOJI","ASCII_LETTER","LETTER","DIGIT","SPACE","CR","LF","EMOJI_VARIATION","EMOJI_JOINER","OBJECT_REPLACEMENT","tlds","utlds","init$2","customSchemes","Start","decodeTlds","Num","Asciinumeric","Alphanumeric","Word","UWord","Nl","Cr","Ws","Emoji","EmojiJoiner","wordjr","uwordjr","fastts","tld","utld","sort","sch","optionalSlashSlash","start","tokens","run$1","str","iterable","stringToArray","charCount","cursor","charCursor","tokenLength","latestAccepting","sinceAccepts","charsSinceAccepts","v","first","charCodeAt","second","char","defaultt","encoded","words","stack","digits","popDigitCount","popCount","pop","defaults","defaultProtocol","events","noop","formatHref","nl2br","tagName","rel","validate","truncate","Infinity","className","attributes","ignoreTags","render","Options","opts","defaultRender","o","ignoredTags","uppercaseIgnoredTags","ir","check","get","operator","isCallable","option","getObj","obj","renderFn","val","MultiToken","isLink","toHref","toFormattedString","formatted","toFormattedHref","startIndex","endIndex","toObject","protocol","type","href","end","toFormattedObject","formattedHref","content","attrs","eventListeners","class","createTokenClass","props","Token","super","Email","Text","Url","hasProtocol","makeState","arg","init$1","qsAccepting","concat","qsNonAccepting","localpartAccepting","Localpart","Domain","Scheme","SlashScheme","LocalpartAt","LocalpartDot","EmailDomain","EmailDomainDot","Email$1","EmailDomainHyphen","EmailColon","DomainHyphen","DomainDot","DomainDotTld","DomainDotTldColon","DomainDotTldColonPort","Url$1","UrlNonaccept","SchemeColon","SlashSchemeColon","SlashSchemeColonSlash","UriPrefix","bracketPairs","OPEN","CLOSE","UrlOpen","UrlOpenQ","UrlOpenSyms","run","multis","textTokens","secondState","multiLength","initMultiToken","Multi","subtokens","startIdx","endIdx","INIT","scanner","parser","tokenQueue","pluginQueue","initialized","init","tokenize","scan","HTML5NamedCharRefs","amp","gt","lt","nbsp","quot","HEXCHARCODE","CHARCODE","NAMED","EntityParser","named","parse","entity","matches","fromCharCode","WSP","ALPHA","CRLF","isSpace","isAlpha","preprocessInput","EventedTokenizer","delegate","entityParser","mode","line","column","tagNameBuffer","states","beforeData","peek","isIgnoredEndTag","transitionTo","markTagStart","consume","tag","beginData","data","finishData","appendToData","consumeCharRef","tagOpen","beginStartTag","appendToTagName","markupDeclarationOpen","beginComment","maybeDoctype","beginDoctype","doctype","beforeDoctypeName","appendToDoctypeName","doctypeName","endDoctype","afterDoctypeName","nextSixChars","isPublic","isSystem","afterDoctypePublicKeyword","doctypePublicIdentifierDoubleQuoted","appendToDoctypePublicIdentifier","doctypePublicIdentifierSingleQuoted","afterDoctypePublicIdentifier","betweenDoctypePublicAndSystemIdentifiers","doctypeSystemIdentifierDoubleQuoted","appendToDoctypeSystemIdentifier","doctypeSystemIdentifierSingleQuoted","afterDoctypeSystemIdentifier","commentStart","finishComment","appendToCommentData","commentStartDash","comment","commentEndDash","commentEnd","finishTag","endTagName","beforeAttributeName","reportSyntaxError","beginAttribute","appendToAttributeName","attributeName","beginAttributeValue","finishAttributeValue","afterAttributeName","beforeAttributeValue","appendToAttributeValue","attributeValueDoubleQuoted","attributeValueSingleQuoted","attributeValueUnquoted","afterAttributeValueQuoted","selfClosingStartTag","markTagAsSelfClosing","endTagOpen","beginEndTag","reset","tokenizePart","tokenizeEOF","handler","Error","flushData","charAt","chars","Tokenizer","startLine","startColumn","tokenizer","_currentAttribute","current","arguments","currentAttribute","addLocInfo","loc","publicIdentifier","systemIdentifier","selfClosing","isQuoted","syntaxError","LinkifyResult","StartTag","EndTag","Chars","Comment","Doctype","linkifyHtml","linkifiedTokens","linkified","isIgnored","preskipLen","skipTagTokens","linkifedChars","linkifyChars","rendered","link","attributeArrayToStrings","escapeText","tokenize$1","skippedTokens","stackCount","attributesToString","text","escapeAttr","attr","attrStrs","tickerTimelineCss","TickerTimelineStyle0","TickerTimeline","hostRef","items","error","header","apiUrl","limit","connectedCallback","fetch","origin","then","response","json","messages","catch","headline","attachments","attachment","src","url","div","document","createElement","split","forEach","paragraph","innerHTML","appendChild","Host","item","createdAt","title"],"sources":["node_modules/date-fns/constants.js","node_modules/date-fns/constructFrom.js","node_modules/date-fns/toDate.js","node_modules/date-fns/_lib/defaultOptions.js","node_modules/date-fns/startOfWeek.js","node_modules/date-fns/startOfISOWeek.js","node_modules/date-fns/getISOWeekYear.js","node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","node_modules/date-fns/_lib/normalizeDates.js","node_modules/date-fns/startOfDay.js","node_modules/date-fns/differenceInCalendarDays.js","node_modules/date-fns/startOfISOWeekYear.js","node_modules/date-fns/compareAsc.js","node_modules/date-fns/isDate.js","node_modules/date-fns/isValid.js","node_modules/date-fns/differenceInCalendarMonths.js","node_modules/date-fns/_lib/getRoundingMethod.js","node_modules/date-fns/differenceInMilliseconds.js","node_modules/date-fns/endOfDay.js","node_modules/date-fns/endOfMonth.js","node_modules/date-fns/isLastDayOfMonth.js","node_modules/date-fns/differenceInMonths.js","node_modules/date-fns/differenceInSeconds.js","node_modules/date-fns/startOfYear.js","node_modules/date-fns/locale/en-US/_lib/formatDistance.js","node_modules/date-fns/locale/_lib/buildFormatLongFn.js","node_modules/date-fns/locale/en-US/_lib/formatLong.js","node_modules/date-fns/locale/en-US/_lib/formatRelative.js","node_modules/date-fns/locale/_lib/buildLocalizeFn.js","node_modules/date-fns/locale/en-US/_lib/localize.js","node_modules/date-fns/locale/_lib/buildMatchFn.js","node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","node_modules/date-fns/locale/en-US/_lib/match.js","node_modules/date-fns/locale/en-US.js","node_modules/date-fns/getDayOfYear.js","node_modules/date-fns/getISOWeek.js","node_modules/date-fns/getWeekYear.js","node_modules/date-fns/startOfWeekYear.js","node_modules/date-fns/getWeek.js","node_modules/date-fns/_lib/addLeadingZeros.js","node_modules/date-fns/_lib/format/lightFormatters.js","node_modules/date-fns/_lib/format/formatters.js","node_modules/date-fns/_lib/format/longFormatters.js","node_modules/date-fns/_lib/protectedTokens.js","node_modules/date-fns/format.js","node_modules/date-fns/formatDistance.js","node_modules/linkifyjs/dist/linkify.es.js","node_modules/linkify-html/dist/linkify-html.es.js","src/components/ticker-timeline/ticker-timeline.css?tag=ticker-timeline","src/components/ticker-timeline/ticker-timeline.tsx"],"sourcesContent":["/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const diff = +toDate(dateLeft) - +toDate(dateRight);\n\n  if (diff < 0) return -1;\n  else if (diff > 0) return 1;\n\n  // Return 0 if diff is 0; return NaN if diff is NaN\n  return diff;\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link differenceInCalendarMonths} function options.\n */\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const yearsDiff = laterDate_.getFullYear() - earlierDate_.getFullYear();\n  const monthsDiff = laterDate_.getMonth() - earlierDate_.getMonth();\n\n  return yearsDiff * 12 + monthsDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","export function getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(laterDate, earlierDate) {\n  return +toDate(laterDate) - +toDate(earlierDate);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfDay} function options.\n */\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfMonth} function options.\n */\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { endOfDay } from \"./endOfDay.js\";\nimport { endOfMonth } from \"./endOfMonth.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  return +endOfDay(_date, options) === +endOfMonth(_date, options);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.js\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.js\";\n\n/**\n * The {@link differenceInMonths} function options.\n */\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(laterDate, earlierDate, options) {\n  const [laterDate_, workingLaterDate, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    laterDate,\n    earlierDate,\n  );\n\n  const sign = compareAsc(workingLaterDate, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarMonths(workingLaterDate, earlierDate_),\n  );\n\n  if (difference < 1) return 0;\n\n  if (workingLaterDate.getMonth() === 1 && workingLaterDate.getDate() > 27)\n    workingLaterDate.setDate(30);\n\n  workingLaterDate.setMonth(workingLaterDate.getMonth() - sign * difference);\n\n  let isLastMonthNotFull = compareAsc(workingLaterDate, earlierDate_) === -sign;\n\n  if (\n    isLastDayOfMonth(laterDate_) &&\n    difference === 1 &&\n    compareAsc(laterDate_, earlierDate_) === 1\n  ) {\n    isLastMonthNotFull = false;\n  }\n\n  const result = sign * (difference - +isLastMonthNotFull);\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.js\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.js\";\n\n/**\n * The {@link differenceInSeconds} function options.\n */\n\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport function differenceInSeconds(laterDate, earlierDate, options) {\n  const diff = differenceInMilliseconds(laterDate, earlierDate) / 1000;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInSeconds;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { minutesInDay, minutesInMonth } from \"./constants.js\";\nimport { differenceInMonths } from \"./differenceInMonths.js\";\nimport { differenceInSeconds } from \"./differenceInSeconds.js\";\n\n/**\n * The {@link formatDistance} function options.\n */\n\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param laterDate - The date\n * @param earlierDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistance(laterDate, earlierDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n  const minutesInAlmostTwoDays = 2520;\n\n  const comparison = compareAsc(laterDate, earlierDate);\n\n  if (isNaN(comparison)) throw new RangeError(\"Invalid time value\");\n\n  const localizeOptions = Object.assign({}, options, {\n    addSuffix: options?.addSuffix,\n    comparison: comparison,\n  });\n\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    ...(comparison > 0 ? [earlierDate, laterDate] : [laterDate, earlierDate]),\n  );\n\n  const seconds = differenceInSeconds(earlierDate_, laterDate_);\n  const offsetInSeconds =\n    (getTimezoneOffsetInMilliseconds(earlierDate_) -\n      getTimezoneOffsetInMilliseconds(laterDate_)) /\n    1000;\n  const minutes = Math.round((seconds - offsetInSeconds) / 60);\n  let months;\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options?.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance(\"lessThanXSeconds\", 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance(\"lessThanXSeconds\", 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance(\"lessThanXSeconds\", 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance(\"halfAMinute\", 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n      }\n    }\n\n    // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n\n    // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance(\"aboutXHours\", 1, localizeOptions);\n\n    // 1.5 hrs up to 24 hrs\n  } else if (minutes < minutesInDay) {\n    const hours = Math.round(minutes / 60);\n    return locale.formatDistance(\"aboutXHours\", hours, localizeOptions);\n\n    // 1 day up to 1.75 days\n  } else if (minutes < minutesInAlmostTwoDays) {\n    return locale.formatDistance(\"xDays\", 1, localizeOptions);\n\n    // 1.75 days up to 30 days\n  } else if (minutes < minutesInMonth) {\n    const days = Math.round(minutes / minutesInDay);\n    return locale.formatDistance(\"xDays\", days, localizeOptions);\n\n    // 1 month up to 2 months\n  } else if (minutes < minutesInMonth * 2) {\n    months = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"aboutXMonths\", months, localizeOptions);\n  }\n\n  months = differenceInMonths(earlierDate_, laterDate_);\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    const nearestMonth = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"xMonths\", nearestMonth, localizeOptions);\n\n    // 1 year up to max Date\n  } else {\n    const monthsSinceStartOfYear = months % 12;\n    const years = Math.trunc(months / 12);\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance(\"aboutXYears\", years, localizeOptions);\n\n      // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance(\"overXYears\", years, localizeOptions);\n\n      // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance(\"almostXYears\", years + 1, localizeOptions);\n    }\n  }\n}\n\n// Fallback for modularized imports:\nexport default formatDistance;\n","// THIS FILE IS AUTOMATICALLY GENERATED DO NOT EDIT DIRECTLY\n// See update-tlds.js for encoding/decoding format\n// https://data.iana.org/TLD/tlds-alpha-by-domain.txt\nconst encodedTlds = 'aaa1rp3bb0ott3vie4c1le2ogado5udhabi7c0ademy5centure6ountant0s9o1tor4d0s1ult4e0g1ro2tna4f0l1rica5g0akhan5ency5i0g1rbus3force5tel5kdn3l0ibaba4pay4lfinanz6state5y2sace3tom5m0azon4ericanexpress7family11x2fam3ica3sterdam8nalytics7droid5quan4z2o0l2partments8p0le4q0uarelle8r0ab1mco4chi3my2pa2t0e3s0da2ia2sociates9t0hleta5torney7u0ction5di0ble3o3spost5thor3o0s4w0s2x0a2z0ure5ba0by2idu3namex4d1k2r0celona5laycard4s5efoot5gains6seball5ketball8uhaus5yern5b0c1t1va3cg1n2d1e0ats2uty4er2ntley5rlin4st0buy5t2f1g1h0arti5i0ble3d1ke2ng0o3o1z2j1lack0friday9ockbuster8g1omberg7ue3m0s1w2n0pparibas9o0ats3ehringer8fa2m1nd2o0k0ing5sch2tik2on4t1utique6x2r0adesco6idgestone9oadway5ker3ther5ussels7s1t1uild0ers6siness6y1zz3v1w1y1z0h3ca0b1fe2l0l1vinklein9m0era3p2non3petown5ital0one8r0avan4ds2e0er0s4s2sa1e1h1ino4t0ering5holic7ba1n1re3c1d1enter4o1rn3f0a1d2g1h0anel2nel4rity4se2t2eap3intai5ristmas6ome4urch5i0priani6rcle4sco3tadel4i0c2y3k1l0aims4eaning6ick2nic1que6othing5ud3ub0med6m1n1o0ach3des3ffee4llege4ogne5m0mbank4unity6pany2re3uter5sec4ndos3struction8ulting7tact3ractors9oking4l1p2rsica5untry4pon0s4rses6pa2r0edit0card4union9icket5own3s1uise0s6u0isinella9v1w1x1y0mru3ou3z2dad1nce3ta1e1ing3sun4y2clk3ds2e0al0er2s3gree4livery5l1oitte5ta3mocrat6ntal2ist5si0gn4v2hl2iamonds6et2gital5rect0ory7scount3ver5h2y2j1k1m1np2o0cs1tor4g1mains5t1wnload7rive4tv2ubai3nlop4pont4rban5vag2r2z2earth3t2c0o2deka3u0cation8e1g1mail3erck5nergy4gineer0ing9terprises10pson4quipment8r0icsson6ni3s0q1tate5t1u0rovision8s2vents5xchange6pert3osed4ress5traspace10fage2il1rwinds6th3mily4n0s2rm0ers5shion4t3edex3edback6rrari3ero6i0delity5o2lm2nal1nce1ial7re0stone6mdale6sh0ing5t0ness6j1k1lickr3ghts4r2orist4wers5y2m1o0o0d1tball6rd1ex2sale4um3undation8x2r0ee1senius7l1ogans4ntier7tr2ujitsu5n0d2rniture7tbol5yi3ga0l0lery3o1up4me0s3p1rden4y2b0iz3d0n2e0a1nt0ing5orge5f1g0ee3h1i0ft0s3ves2ing5l0ass3e1obal2o4m0ail3bh2o1x2n1odaddy5ld0point6f2o0dyear5g0le4p1t1v2p1q1r0ainger5phics5tis4een3ipe3ocery4up4s1t1u0cci3ge2ide2tars5ru3w1y2hair2mburg5ngout5us3bo2dfc0bank7ealth0care8lp1sinki6re1mes5iphop4samitsu7tachi5v2k0t2m1n1ockey4ldings5iday5medepot5goods5s0ense7nda3rse3spital5t0ing5t0els3mail5use3w2r1sbc3t1u0ghes5yatt3undai7ibm2cbc2e1u2d1e0ee3fm2kano4l1m0amat4db2mo0bilien9n0c1dustries8finiti5o2g1k1stitute6urance4e4t0ernational10uit4vestments10o1piranga7q1r0ish4s0maili5t0anbul7t0au2v3jaguar4va3cb2e0ep2tzt3welry6io2ll2m0p2nj2o0bs1urg4t1y2p0morgan6rs3uegos4niper7kaufen5ddi3e0rryhotels6logistics9properties14fh2g1h1i0a1ds2m1ndle4tchen5wi3m1n1oeln3matsu5sher5p0mg2n2r0d1ed3uokgroup8w1y0oto4z2la0caixa5mborghini8er3ncaster6d0rover6xess5salle5t0ino3robe5w0yer5b1c1ds2ease3clerc5frak4gal2o2xus4gbt3i0dl2fe0insurance9style7ghting6ke2lly3mited4o2ncoln4k2psy3ve1ing5k1lc1p2oan0s3cker3us3l1ndon4tte1o3ve3pl0financial11r1s1t0d0a3u0ndbeck6xe1ury5v1y2ma0drid4if1son4keup4n0agement7go3p1rket0ing3s4riott5shalls7ttel5ba2c0kinsey7d1e0d0ia3et2lbourne7me1orial6n0u2rckmsd7g1h1iami3crosoft7l1ni1t2t0subishi9k1l0b1s2m0a2n1o0bi0le4da2e1i1m1nash3ey2ster5rmon3tgage6scow4to0rcycles9v0ie4p1q1r1s0d2t0n1r2u0seum3ic4v1w1x1y1z2na0b1goya4me2vy3ba2c1e0c1t0bank4flix4work5ustar5w0s2xt0direct7us4f0l2g0o2hk2i0co2ke1on3nja3ssan1y5l1o0kia3rton4w0ruz3tv4p1r0a1w2tt2u1yc2z2obi1server7ffice5kinawa6layan0group9lo3m0ega4ne1g1l0ine5oo2pen3racle3nge4g0anic5igins6saka4tsuka4t2vh3pa0ge2nasonic7ris2s1tners4s1y3y2ccw3e0t2f0izer5g1h0armacy6d1ilips5one2to0graphy6s4ysio5ics1tet2ures6d1n0g1k2oneer5zza4k1l0ace2y0station9umbing5s3m1n0c2ohl2ker3litie5rn2st3r0america6xi3ess3ime3o0d0uctions8f1gressive8mo2perties3y5tection8u0dential9s1t1ub2w0c2y2qa1pon3uebec3st5racing4dio4e0ad1lestate6tor2y4cipes5d0stone5umbrella9hab3ise0n3t2liance6n0t0als5pair3ort3ublican8st0aurant8view0s5xroth6ich0ardli6oh3l1o1p2o0cks3deo3gers4om3s0vp3u0gby3hr2n2w0e2yukyu6sa0arland6fe0ty4kura4le1on3msclub4ung5ndvik0coromant12ofi4p1rl2s1ve2xo3b0i1s2c0b1haeffler7midt4olarships8ol3ule3warz5ience5ot3d1e0arch3t2cure1ity6ek2lect4ner3rvices6ven3w1x0y3fr2g1h0angrila6rp3ell3ia1ksha5oes2p0ping5uji3w3i0lk2na1gles5te3j1k0i0n2y0pe4l0ing4m0art3ile4n0cf3o0ccer3ial4ftbank4ware6hu2lar2utions7ng1y2y2pa0ce3ort2t3r0l2s1t0ada2ples4r1tebank4farm7c0group6ockholm6rage3e3ream4udio2y3yle4u0cks3pplies3y2ort5rf1gery5zuki5v1watch4iss4x1y0dney4stems6z2tab1ipei4lk2obao4rget4tamotors6r2too4x0i3c0i2d0k2eam2ch0nology8l1masek5nnis4va3f1g1h0d1eater2re6iaa2ckets5enda4ps2res2ol4j0maxx4x2k0maxx5l1m0all4n1o0day3kyo3ols3p1ray3shiba5tal3urs3wn2yota3s3r0ade1ing4ining5vel0ers0insurance16ust3v2t1ube2i1nes3shu4v0s2w1z2ua1bank3s2g1k1nicom3versity8o2ol2ps2s1y1z2va0cations7na1guard7c1e0gas3ntures6risign5mögensberater2ung14sicherung10t2g1i0ajes4deo3g1king4llas4n1p1rgin4sa1ion4va1o3laanderen9n1odka3lvo3te1ing3o2yage5u2wales2mart4ter4ng0gou5tch0es6eather0channel12bcam3er2site5d0ding5ibo2r3f1hoswho6ien2ki2lliamhill9n0dows4e1ners6me2olterskluwer11odside6rk0s2ld3w2s1tc1f3xbox3erox4ihuan4n2xx2yz3yachts4hoo3maxun5ndex5e1odobashi7ga2kohama6u0tube6t1un3za0ppos4ra3ero3ip2m1one3uerich6w2';\n// Internationalized domain names containing non-ASCII\nconst encodedUtlds = 'ελ1υ2бг1ел3дети4ею2католик6ом3мкд2он1сква6онлайн5рг3рус2ф2сайт3рб3укр3қаз3հայ3ישראל5קום3ابوظبي5رامكو5لاردن4بحرين5جزائر5سعودية6عليان5مغرب5مارات5یران5بارت2زار4يتك3ھارت5تونس4سودان3رية5شبكة4عراق2ب2مان4فلسطين6قطر3كاثوليك6وم3مصر2ليسيا5وريتانيا7قع4همراه5پاکستان7ڀارت4कॉम3नेट3भारत0म्3ोत5संगठन5বাংলা5ভারত2ৰত4ਭਾਰਤ4ભારત4ଭାରତ4இந்தியா6லங்கை6சிங்கப்பூர்11భారత్5ಭಾರತ4ഭാരതം5ලංකා4คอม3ไทย3ລາວ3გე2みんな3アマゾン4クラウド4グーグル4コム2ストア3セール3ファッション6ポイント4世界2中信1国1國1文网3亚马逊3企业2佛山2信息2健康2八卦2公司1益2台湾1灣2商城1店1标2嘉里0大酒店5在线2大拿2天主教3娱乐2家電2广东2微博2慈善2我爱你3手机2招聘2政务1府2新加坡2闻2时尚2書籍2机构2淡马锡3游戏2澳門2点看2移动2组织机构4网址1店1站1络2联通2谷歌2购物2通販2集团2電訊盈科4飞利浦3食品2餐厅2香格里拉3港2닷넷1컴2삼성2한국2';\n\n/**\n * @template A\n * @template B\n * @param {A} target\n * @param {B} properties\n * @return {A & B}\n */\nconst assign = (target, properties) => {\n  for (const key in properties) {\n    target[key] = properties[key];\n  }\n  return target;\n};\n\n/**\n * Finite State Machine generation utilities\n */\n\n/**\n * @template T\n * @typedef {{ [group: string]: T[] }} Collections\n */\n\n/**\n * @typedef {{ [group: string]: true }} Flags\n */\n\n// Keys in scanner Collections instances\nconst numeric = 'numeric';\nconst ascii = 'ascii';\nconst alpha = 'alpha';\nconst asciinumeric = 'asciinumeric';\nconst alphanumeric = 'alphanumeric';\nconst domain = 'domain';\nconst emoji = 'emoji';\nconst scheme = 'scheme';\nconst slashscheme = 'slashscheme';\nconst whitespace = 'whitespace';\n\n/**\n * @template T\n * @param {string} name\n * @param {Collections<T>} groups to register in\n * @returns {T[]} Current list of tokens in the given collection\n */\nfunction registerGroup(name, groups) {\n  if (!(name in groups)) {\n    groups[name] = [];\n  }\n  return groups[name];\n}\n\n/**\n * @template T\n * @param {T} t token to add\n * @param {Collections<T>} groups\n * @param {Flags} flags\n */\nfunction addToGroups(t, flags, groups) {\n  if (flags[numeric]) {\n    flags[asciinumeric] = true;\n    flags[alphanumeric] = true;\n  }\n  if (flags[ascii]) {\n    flags[asciinumeric] = true;\n    flags[alpha] = true;\n  }\n  if (flags[asciinumeric]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alpha]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alphanumeric]) {\n    flags[domain] = true;\n  }\n  if (flags[emoji]) {\n    flags[domain] = true;\n  }\n  for (const k in flags) {\n    const group = registerGroup(k, groups);\n    if (group.indexOf(t) < 0) {\n      group.push(t);\n    }\n  }\n}\n\n/**\n * @template T\n * @param {T} t token to check\n * @param {Collections<T>} groups\n * @returns {Flags} group flags that contain this token\n */\nfunction flagsForToken(t, groups) {\n  const result = {};\n  for (const c in groups) {\n    if (groups[c].indexOf(t) >= 0) {\n      result[c] = true;\n    }\n  }\n  return result;\n}\n\n/**\n * @template T\n * @typedef {null | T } Transition\n */\n\n/**\n * Define a basic state machine state. j is the list of character transitions,\n * jr is the list of regex-match transitions, jd is the default state to\n * transition to t is the accepting token type, if any. If this is the terminal\n * state, then it does not emit a token.\n *\n * The template type T represents the type of the token this state accepts. This\n * should be a string (such as of the token exports in `text.js`) or a\n * MultiToken subclass (from `multi.js`)\n *\n * @template T\n * @param {T} [token] Token that this state emits\n */\nfunction State(token = null) {\n  // this.n = null; // DEBUG: State name\n  /** @type {{ [input: string]: State<T> }} j */\n  this.j = {}; // IMPLEMENTATION 1\n  // this.j = []; // IMPLEMENTATION 2\n  /** @type {[RegExp, State<T>][]} jr */\n  this.jr = [];\n  /** @type {?State<T>} jd */\n  this.jd = null;\n  /** @type {?T} t */\n  this.t = token;\n}\n\n/**\n * Scanner token groups\n * @type Collections<string>\n */\nState.groups = {};\nState.prototype = {\n  accepts() {\n    return !!this.t;\n  },\n  /**\n   * Follow an existing transition from the given input to the next state.\n   * Does not mutate.\n   * @param {string} input character or token type to transition on\n   * @returns {?State<T>} the next state, if any\n   */\n  go(input) {\n    const state = this;\n    const nextState = state.j[input];\n    if (nextState) {\n      return nextState;\n    }\n    for (let i = 0; i < state.jr.length; i++) {\n      const regex = state.jr[i][0];\n      const nextState = state.jr[i][1]; // note: might be empty to prevent default jump\n      if (nextState && regex.test(input)) {\n        return nextState;\n      }\n    }\n    // Nowhere left to jump! Return default, if any\n    return state.jd;\n  },\n  /**\n   * Whether the state has a transition for the given input. Set the second\n   * argument to true to only look for an exact match (and not a default or\n   * regular-expression-based transition)\n   * @param {string} input\n   * @param {boolean} exactOnly\n   */\n  has(input, exactOnly = false) {\n    return exactOnly ? input in this.j : !!this.go(input);\n  },\n  /**\n   * Short for \"transition all\"; create a transition from the array of items\n   * in the given list to the same final resulting state.\n   * @param {string | string[]} inputs Group of inputs to transition on\n   * @param {Transition<T> | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   */\n  ta(inputs, next, flags, groups) {\n    for (let i = 0; i < inputs.length; i++) {\n      this.tt(inputs[i], next, flags, groups);\n    }\n  },\n  /**\n   * Short for \"take regexp transition\"; defines a transition for this state\n   * when it encounters a token which matches the given regular expression\n   * @param {RegExp} regexp Regular expression transition (populate first)\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  tr(regexp, next, flags, groups) {\n    groups = groups || State.groups;\n    let nextState;\n    if (next && next.j) {\n      nextState = next;\n    } else {\n      // Token with maybe token groups\n      nextState = new State(next);\n      if (flags && groups) {\n        addToGroups(next, flags, groups);\n      }\n    }\n    this.jr.push([regexp, nextState]);\n    return nextState;\n  },\n  /**\n   * Short for \"take transitions\", will take as many sequential transitions as\n   * the length of the given input and returns the\n   * resulting final state.\n   * @param {string | string[]} input\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  ts(input, next, flags, groups) {\n    let state = this;\n    const len = input.length;\n    if (!len) {\n      return state;\n    }\n    for (let i = 0; i < len - 1; i++) {\n      state = state.tt(input[i]);\n    }\n    return state.tt(input[len - 1], next, flags, groups);\n  },\n  /**\n   * Short for \"take transition\", this is a method for building/working with\n   * state machines.\n   *\n   * If a state already exists for the given input, returns it.\n   *\n   * If a token is specified, that state will emit that token when reached by\n   * the linkify engine.\n   *\n   * If no state exists, it will be initialized with some default transitions\n   * that resemble existing default transitions.\n   *\n   * If a state is given for the second argument, that state will be\n   * transitioned to on the given input regardless of what that input\n   * previously did.\n   *\n   * Specify a token group flags to define groups that this token belongs to.\n   * The token will be added to corresponding entires in the given groups\n   * object.\n   *\n   * @param {string} input character, token type to transition on\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of groups\n   * @returns {State<T>} taken after the given input\n   */\n  tt(input, next, flags, groups) {\n    groups = groups || State.groups;\n    const state = this;\n\n    // Check if existing state given, just a basic transition\n    if (next && next.j) {\n      state.j[input] = next;\n      return next;\n    }\n    const t = next;\n\n    // Take the transition with the usual default mechanisms and use that as\n    // a template for creating the next state\n    let nextState,\n      templateState = state.go(input);\n    if (templateState) {\n      nextState = new State();\n      assign(nextState.j, templateState.j);\n      nextState.jr.push.apply(nextState.jr, templateState.jr);\n      nextState.jd = templateState.jd;\n      nextState.t = templateState.t;\n    } else {\n      nextState = new State();\n    }\n    if (t) {\n      // Ensure newly token is in the same groups as the old token\n      if (groups) {\n        if (nextState.t && typeof nextState.t === 'string') {\n          const allFlags = assign(flagsForToken(nextState.t, groups), flags);\n          addToGroups(t, allFlags, groups);\n        } else if (flags) {\n          addToGroups(t, flags, groups);\n        }\n      }\n      nextState.t = t; // overwrite anything that was previously there\n    }\n    state.j[input] = nextState;\n    return nextState;\n  }\n};\n\n// Helper functions to improve minification (not exported outside linkifyjs module)\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ta = (state, input, next, flags, groups) => state.ta(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {RegExp} regexp\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst tr = (state, regexp, next, flags, groups) => state.tr(regexp, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ts = (state, input, next, flags, groups) => state.ts(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string} input\n * @param {T | State<T>} [next]\n * @param {Collections<T>} [groups]\n * @param {Flags} [flags]\n */\nconst tt = (state, input, next, flags, groups) => state.tt(input, next, flags, groups);\n\n/******************************************************************************\nText Tokens\nIdentifiers for token outputs from the regexp scanner\n******************************************************************************/\n\n// A valid web domain token\nconst WORD = 'WORD'; // only contains a-z\nconst UWORD = 'UWORD'; // contains letters other than a-z, used for IDN\nconst ASCIINUMERICAL = 'ASCIINUMERICAL'; // contains a-z, 0-9\nconst ALPHANUMERICAL = 'ALPHANUMERICAL'; // contains numbers and letters other than a-z, used for IDN\n\n// Special case of word\nconst LOCALHOST = 'LOCALHOST';\n\n// Valid top-level domain, special case of WORD (see tlds.js)\nconst TLD = 'TLD';\n\n// Valid IDN TLD, special case of UWORD (see tlds.js)\nconst UTLD = 'UTLD';\n\n// The scheme portion of a web URI protocol. Supported types include: `mailto`,\n// `file`, and user-defined custom protocols. Limited to schemes that contain\n// only letters\nconst SCHEME = 'SCHEME';\n\n// Similar to SCHEME, except makes distinction for schemes that must always be\n// followed by `://`, not just `:`. Supported types include `http`, `https`,\n// `ftp`, `ftps`\nconst SLASH_SCHEME = 'SLASH_SCHEME';\n\n// Any sequence of digits 0-9\nconst NUM = 'NUM';\n\n// Any number of consecutive whitespace characters that are not newline\nconst WS = 'WS';\n\n// New line (unix style)\nconst NL = 'NL'; // \\n\n\n// Opening/closing bracket classes\n// TODO: Rename OPEN -> LEFT and CLOSE -> RIGHT in v5 to fit with Unicode names\n// Also rename angle brackes to LESSTHAN and GREATER THAN\nconst OPENBRACE = 'OPENBRACE'; // {\nconst CLOSEBRACE = 'CLOSEBRACE'; // }\nconst OPENBRACKET = 'OPENBRACKET'; // [\nconst CLOSEBRACKET = 'CLOSEBRACKET'; // ]\nconst OPENPAREN = 'OPENPAREN'; // (\nconst CLOSEPAREN = 'CLOSEPAREN'; // )\nconst OPENANGLEBRACKET = 'OPENANGLEBRACKET'; // <\nconst CLOSEANGLEBRACKET = 'CLOSEANGLEBRACKET'; // >\nconst FULLWIDTHLEFTPAREN = 'FULLWIDTHLEFTPAREN'; // （\nconst FULLWIDTHRIGHTPAREN = 'FULLWIDTHRIGHTPAREN'; // ）\nconst LEFTCORNERBRACKET = 'LEFTCORNERBRACKET'; // 「\nconst RIGHTCORNERBRACKET = 'RIGHTCORNERBRACKET'; // 」\nconst LEFTWHITECORNERBRACKET = 'LEFTWHITECORNERBRACKET'; // 『\nconst RIGHTWHITECORNERBRACKET = 'RIGHTWHITECORNERBRACKET'; // 』\nconst FULLWIDTHLESSTHAN = 'FULLWIDTHLESSTHAN'; // ＜\nconst FULLWIDTHGREATERTHAN = 'FULLWIDTHGREATERTHAN'; // ＞\n\n// Various symbols\nconst AMPERSAND = 'AMPERSAND'; // &\nconst APOSTROPHE = 'APOSTROPHE'; // '\nconst ASTERISK = 'ASTERISK'; // *\nconst AT = 'AT'; // @\nconst BACKSLASH = 'BACKSLASH'; // \\\nconst BACKTICK = 'BACKTICK'; // `\nconst CARET = 'CARET'; // ^\nconst COLON = 'COLON'; // :\nconst COMMA = 'COMMA'; // ,\nconst DOLLAR = 'DOLLAR'; // $\nconst DOT = 'DOT'; // .\nconst EQUALS = 'EQUALS'; // =\nconst EXCLAMATION = 'EXCLAMATION'; // !\nconst HYPHEN = 'HYPHEN'; // -\nconst PERCENT = 'PERCENT'; // %\nconst PIPE = 'PIPE'; // |\nconst PLUS = 'PLUS'; // +\nconst POUND = 'POUND'; // #\nconst QUERY = 'QUERY'; // ?\nconst QUOTE = 'QUOTE'; // \"\nconst FULLWIDTHMIDDLEDOT = 'FULLWIDTHMIDDLEDOT'; // ・\n\nconst SEMI = 'SEMI'; // ;\nconst SLASH = 'SLASH'; // /\nconst TILDE = 'TILDE'; // ~\nconst UNDERSCORE = 'UNDERSCORE'; // _\n\n// Emoji symbol\nconst EMOJI$1 = 'EMOJI';\n\n// Default token - anything that is not one of the above\nconst SYM = 'SYM';\n\nvar tk = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tWORD: WORD,\n\tUWORD: UWORD,\n\tASCIINUMERICAL: ASCIINUMERICAL,\n\tALPHANUMERICAL: ALPHANUMERICAL,\n\tLOCALHOST: LOCALHOST,\n\tTLD: TLD,\n\tUTLD: UTLD,\n\tSCHEME: SCHEME,\n\tSLASH_SCHEME: SLASH_SCHEME,\n\tNUM: NUM,\n\tWS: WS,\n\tNL: NL,\n\tOPENBRACE: OPENBRACE,\n\tCLOSEBRACE: CLOSEBRACE,\n\tOPENBRACKET: OPENBRACKET,\n\tCLOSEBRACKET: CLOSEBRACKET,\n\tOPENPAREN: OPENPAREN,\n\tCLOSEPAREN: CLOSEPAREN,\n\tOPENANGLEBRACKET: OPENANGLEBRACKET,\n\tCLOSEANGLEBRACKET: CLOSEANGLEBRACKET,\n\tFULLWIDTHLEFTPAREN: FULLWIDTHLEFTPAREN,\n\tFULLWIDTHRIGHTPAREN: FULLWIDTHRIGHTPAREN,\n\tLEFTCORNERBRACKET: LEFTCORNERBRACKET,\n\tRIGHTCORNERBRACKET: RIGHTCORNERBRACKET,\n\tLEFTWHITECORNERBRACKET: LEFTWHITECORNERBRACKET,\n\tRIGHTWHITECORNERBRACKET: RIGHTWHITECORNERBRACKET,\n\tFULLWIDTHLESSTHAN: FULLWIDTHLESSTHAN,\n\tFULLWIDTHGREATERTHAN: FULLWIDTHGREATERTHAN,\n\tAMPERSAND: AMPERSAND,\n\tAPOSTROPHE: APOSTROPHE,\n\tASTERISK: ASTERISK,\n\tAT: AT,\n\tBACKSLASH: BACKSLASH,\n\tBACKTICK: BACKTICK,\n\tCARET: CARET,\n\tCOLON: COLON,\n\tCOMMA: COMMA,\n\tDOLLAR: DOLLAR,\n\tDOT: DOT,\n\tEQUALS: EQUALS,\n\tEXCLAMATION: EXCLAMATION,\n\tHYPHEN: HYPHEN,\n\tPERCENT: PERCENT,\n\tPIPE: PIPE,\n\tPLUS: PLUS,\n\tPOUND: POUND,\n\tQUERY: QUERY,\n\tQUOTE: QUOTE,\n\tFULLWIDTHMIDDLEDOT: FULLWIDTHMIDDLEDOT,\n\tSEMI: SEMI,\n\tSLASH: SLASH,\n\tTILDE: TILDE,\n\tUNDERSCORE: UNDERSCORE,\n\tEMOJI: EMOJI$1,\n\tSYM: SYM\n});\n\n// Note that these two Unicode ones expand into a really big one with Babel\nconst ASCII_LETTER = /[a-z]/;\nconst LETTER = /\\p{L}/u; // Any Unicode character with letter data type\nconst EMOJI = /\\p{Emoji}/u; // Any Unicode emoji character\nconst EMOJI_VARIATION$1 = /\\ufe0f/;\nconst DIGIT = /\\d/;\nconst SPACE = /\\s/;\n\nvar regexp = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tASCII_LETTER: ASCII_LETTER,\n\tLETTER: LETTER,\n\tEMOJI: EMOJI,\n\tEMOJI_VARIATION: EMOJI_VARIATION$1,\n\tDIGIT: DIGIT,\n\tSPACE: SPACE\n});\n\n/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n*/\nconst CR = '\\r'; // carriage-return character\nconst LF = '\\n'; // line-feed character\nconst EMOJI_VARIATION = '\\ufe0f'; // Variation selector, follows heart and others\nconst EMOJI_JOINER = '\\u200d'; // zero-width joiner\nconst OBJECT_REPLACEMENT = '\\ufffc'; // whitespace placeholder that sometimes appears in rich text editors\n\nlet tlds = null,\n  utlds = null; // don't change so only have to be computed once\n\n/**\n * Scanner output token:\n * - `t` is the token name (e.g., 'NUM', 'EMOJI', 'TLD')\n * - `v` is the value of the token (e.g., '123', '❤️', 'com')\n * - `s` is the start index of the token in the original string\n * - `e` is the end index of the token in the original string\n * @typedef {{t: string, v: string, s: number, e: number}} Token\n */\n\n/**\n * @template T\n * @typedef {{ [collection: string]: T[] }} Collections\n */\n\n/**\n * Initialize the scanner character-based state machine for the given start\n * state\n * @param {[string, boolean][]} customSchemes List of custom schemes, where each\n * item is a length-2 tuple with the first element set to the string scheme, and\n * the second element set to `true` if the `://` after the scheme is optional\n */\nfunction init$2(customSchemes = []) {\n  // Frequently used states (name argument removed during minification)\n  /** @type Collections<string> */\n  const groups = {}; // of tokens\n  State.groups = groups;\n  /** @type State<string> */\n  const Start = new State();\n  if (tlds == null) {\n    tlds = decodeTlds(encodedTlds);\n  }\n  if (utlds == null) {\n    utlds = decodeTlds(encodedUtlds);\n  }\n\n  // States for special URL symbols that accept immediately after start\n  tt(Start, \"'\", APOSTROPHE);\n  tt(Start, '{', OPENBRACE);\n  tt(Start, '}', CLOSEBRACE);\n  tt(Start, '[', OPENBRACKET);\n  tt(Start, ']', CLOSEBRACKET);\n  tt(Start, '(', OPENPAREN);\n  tt(Start, ')', CLOSEPAREN);\n  tt(Start, '<', OPENANGLEBRACKET);\n  tt(Start, '>', CLOSEANGLEBRACKET);\n  tt(Start, '（', FULLWIDTHLEFTPAREN);\n  tt(Start, '）', FULLWIDTHRIGHTPAREN);\n  tt(Start, '「', LEFTCORNERBRACKET);\n  tt(Start, '」', RIGHTCORNERBRACKET);\n  tt(Start, '『', LEFTWHITECORNERBRACKET);\n  tt(Start, '』', RIGHTWHITECORNERBRACKET);\n  tt(Start, '＜', FULLWIDTHLESSTHAN);\n  tt(Start, '＞', FULLWIDTHGREATERTHAN);\n  tt(Start, '&', AMPERSAND);\n  tt(Start, '*', ASTERISK);\n  tt(Start, '@', AT);\n  tt(Start, '`', BACKTICK);\n  tt(Start, '^', CARET);\n  tt(Start, ':', COLON);\n  tt(Start, ',', COMMA);\n  tt(Start, '$', DOLLAR);\n  tt(Start, '.', DOT);\n  tt(Start, '=', EQUALS);\n  tt(Start, '!', EXCLAMATION);\n  tt(Start, '-', HYPHEN);\n  tt(Start, '%', PERCENT);\n  tt(Start, '|', PIPE);\n  tt(Start, '+', PLUS);\n  tt(Start, '#', POUND);\n  tt(Start, '?', QUERY);\n  tt(Start, '\"', QUOTE);\n  tt(Start, '/', SLASH);\n  tt(Start, ';', SEMI);\n  tt(Start, '~', TILDE);\n  tt(Start, '_', UNDERSCORE);\n  tt(Start, '\\\\', BACKSLASH);\n  tt(Start, '・', FULLWIDTHMIDDLEDOT);\n  const Num = tr(Start, DIGIT, NUM, {\n    [numeric]: true\n  });\n  tr(Num, DIGIT, Num);\n  const Asciinumeric = tr(Num, ASCII_LETTER, ASCIINUMERICAL, {\n    [asciinumeric]: true\n  });\n  const Alphanumeric = tr(Num, LETTER, ALPHANUMERICAL, {\n    [alphanumeric]: true\n  });\n\n  // State which emits a word token\n  const Word = tr(Start, ASCII_LETTER, WORD, {\n    [ascii]: true\n  });\n  tr(Word, DIGIT, Asciinumeric);\n  tr(Word, ASCII_LETTER, Word);\n  tr(Asciinumeric, DIGIT, Asciinumeric);\n  tr(Asciinumeric, ASCII_LETTER, Asciinumeric);\n\n  // Same as previous, but specific to non-fsm.ascii alphabet words\n  const UWord = tr(Start, LETTER, UWORD, {\n    [alpha]: true\n  });\n  tr(UWord, ASCII_LETTER); // Non-accepting\n  tr(UWord, DIGIT, Alphanumeric);\n  tr(UWord, LETTER, UWord);\n  tr(Alphanumeric, DIGIT, Alphanumeric);\n  tr(Alphanumeric, ASCII_LETTER); // Non-accepting\n  tr(Alphanumeric, LETTER, Alphanumeric); // Non-accepting\n\n  // Whitespace jumps\n  // Tokens of only non-newline whitespace are arbitrarily long\n  // If any whitespace except newline, more whitespace!\n  const Nl = tt(Start, LF, NL, {\n    [whitespace]: true\n  });\n  const Cr = tt(Start, CR, WS, {\n    [whitespace]: true\n  });\n  const Ws = tr(Start, SPACE, WS, {\n    [whitespace]: true\n  });\n  tt(Start, OBJECT_REPLACEMENT, Ws);\n  tt(Cr, LF, Nl); // \\r\\n\n  tt(Cr, OBJECT_REPLACEMENT, Ws);\n  tr(Cr, SPACE, Ws);\n  tt(Ws, CR); // non-accepting state to avoid mixing whitespaces\n  tt(Ws, LF); // non-accepting state to avoid mixing whitespaces\n  tr(Ws, SPACE, Ws);\n  tt(Ws, OBJECT_REPLACEMENT, Ws);\n\n  // Emoji tokens. They are not grouped by the scanner except in cases where a\n  // zero-width joiner is present\n  const Emoji = tr(Start, EMOJI, EMOJI$1, {\n    [emoji]: true\n  });\n  tt(Emoji, '#'); // no transition, emoji regex seems to match #\n  tr(Emoji, EMOJI, Emoji);\n  tt(Emoji, EMOJI_VARIATION, Emoji);\n  // tt(Start, EMOJI_VARIATION, Emoji); // This one is sketchy\n\n  const EmojiJoiner = tt(Emoji, EMOJI_JOINER);\n  tt(EmojiJoiner, '#');\n  tr(EmojiJoiner, EMOJI, Emoji);\n  // tt(EmojiJoiner, EMOJI_VARIATION, Emoji); // also sketchy\n\n  // Generates states for top-level domains\n  // Note that this is most accurate when tlds are in alphabetical order\n  const wordjr = [[ASCII_LETTER, Word], [DIGIT, Asciinumeric]];\n  const uwordjr = [[ASCII_LETTER, null], [LETTER, UWord], [DIGIT, Alphanumeric]];\n  for (let i = 0; i < tlds.length; i++) {\n    fastts(Start, tlds[i], TLD, WORD, wordjr);\n  }\n  for (let i = 0; i < utlds.length; i++) {\n    fastts(Start, utlds[i], UTLD, UWORD, uwordjr);\n  }\n  addToGroups(TLD, {\n    tld: true,\n    ascii: true\n  }, groups);\n  addToGroups(UTLD, {\n    utld: true,\n    alpha: true\n  }, groups);\n\n  // Collect the states generated by different protocols. NOTE: If any new TLDs\n  // get added that are also protocols, set the token to be the same as the\n  // protocol to ensure parsing works as expected.\n  fastts(Start, 'file', SCHEME, WORD, wordjr);\n  fastts(Start, 'mailto', SCHEME, WORD, wordjr);\n  fastts(Start, 'http', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'https', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftp', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftps', SLASH_SCHEME, WORD, wordjr);\n  addToGroups(SCHEME, {\n    scheme: true,\n    ascii: true\n  }, groups);\n  addToGroups(SLASH_SCHEME, {\n    slashscheme: true,\n    ascii: true\n  }, groups);\n\n  // Register custom schemes. Assumes each scheme is asciinumeric with hyphens\n  customSchemes = customSchemes.sort((a, b) => a[0] > b[0] ? 1 : -1);\n  for (let i = 0; i < customSchemes.length; i++) {\n    const sch = customSchemes[i][0];\n    const optionalSlashSlash = customSchemes[i][1];\n    const flags = optionalSlashSlash ? {\n      [scheme]: true\n    } : {\n      [slashscheme]: true\n    };\n    if (sch.indexOf('-') >= 0) {\n      flags[domain] = true;\n    } else if (!ASCII_LETTER.test(sch)) {\n      flags[numeric] = true; // numbers only\n    } else if (DIGIT.test(sch)) {\n      flags[asciinumeric] = true;\n    } else {\n      flags[ascii] = true;\n    }\n    ts(Start, sch, sch, flags);\n  }\n\n  // Localhost token\n  ts(Start, 'localhost', LOCALHOST, {\n    ascii: true\n  });\n\n  // Set default transition for start state (some symbol)\n  Start.jd = new State(SYM);\n  return {\n    start: Start,\n    tokens: assign({\n      groups\n    }, tk)\n  };\n}\n\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {State<string>} start scanner starting state\n\t@param {string} str input string to scan\n\t@return {Token[]} list of tokens, each with a type and value\n*/\nfunction run$1(start, str) {\n  // State machine is not case sensitive, so input is tokenized in lowercased\n  // form (still returns regular case). Uses selective `toLowerCase` because\n  // lowercasing the entire string causes the length and character position to\n  // vary in some non-English strings with V8-based runtimes.\n  const iterable = stringToArray(str.replace(/[A-Z]/g, c => c.toLowerCase()));\n  const charCount = iterable.length; // <= len if there are emojis, etc\n  const tokens = []; // return value\n\n  // cursor through the string itself, accounting for characters that have\n  // width with length 2 such as emojis\n  let cursor = 0;\n\n  // Cursor through the array-representation of the string\n  let charCursor = 0;\n\n  // Tokenize the string\n  while (charCursor < charCount) {\n    let state = start;\n    let nextState = null;\n    let tokenLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    let charsSinceAccepts = -1;\n    while (charCursor < charCount && (nextState = state.go(iterable[charCursor]))) {\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        charsSinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts += iterable[charCursor].length;\n        charsSinceAccepts++;\n      }\n      tokenLength += iterable[charCursor].length;\n      cursor += iterable[charCursor].length;\n      charCursor++;\n    }\n\n    // Roll back to the latest accepting state\n    cursor -= sinceAccepts;\n    charCursor -= charsSinceAccepts;\n    tokenLength -= sinceAccepts;\n\n    // No more jumps, just make a new token from the last accepting one\n    tokens.push({\n      t: latestAccepting.t,\n      // token type/name\n      v: str.slice(cursor - tokenLength, cursor),\n      // string value\n      s: cursor - tokenLength,\n      // start index\n      e: cursor // end index (excluding)\n    });\n  }\n  return tokens;\n}\n\n/**\n * Convert a String to an Array of characters, taking into account that some\n * characters like emojis take up two string indexes.\n *\n * Adapted from core-js (MIT license)\n * https://github.com/zloirock/core-js/blob/2d69cf5f99ab3ea3463c395df81e5a15b68f49d9/packages/core-js/internals/string-multibyte.js\n *\n * @function stringToArray\n * @param {string} str\n * @returns {string[]}\n */\nfunction stringToArray(str) {\n  const result = [];\n  const len = str.length;\n  let index = 0;\n  while (index < len) {\n    let first = str.charCodeAt(index);\n    let second;\n    let char = first < 0xd800 || first > 0xdbff || index + 1 === len || (second = str.charCodeAt(index + 1)) < 0xdc00 || second > 0xdfff ? str[index] // single character\n    : str.slice(index, index + 2); // two-index characters\n    result.push(char);\n    index += char.length;\n  }\n  return result;\n}\n\n/**\n * Fast version of ts function for when transition defaults are well known\n * @param {State<string>} state\n * @param {string} input\n * @param {string} t\n * @param {string} defaultt\n * @param {[RegExp, State<string>][]} jr\n * @returns {State<string>}\n */\nfunction fastts(state, input, t, defaultt, jr) {\n  let next;\n  const len = input.length;\n  for (let i = 0; i < len - 1; i++) {\n    const char = input[i];\n    if (state.j[char]) {\n      next = state.j[char];\n    } else {\n      next = new State(defaultt);\n      next.jr = jr.slice();\n      state.j[char] = next;\n    }\n    state = next;\n  }\n  next = new State(t);\n  next.jr = jr.slice();\n  state.j[input[len - 1]] = next;\n  return next;\n}\n\n/**\n * Converts a string of Top-Level Domain names encoded in update-tlds.js back\n * into a list of strings.\n * @param {str} encoded encoded TLDs string\n * @returns {str[]} original TLDs list\n */\nfunction decodeTlds(encoded) {\n  const words = [];\n  const stack = [];\n  let i = 0;\n  let digits = '0123456789';\n  while (i < encoded.length) {\n    let popDigitCount = 0;\n    while (digits.indexOf(encoded[i + popDigitCount]) >= 0) {\n      popDigitCount++; // encountered some digits, have to pop to go one level up trie\n    }\n    if (popDigitCount > 0) {\n      words.push(stack.join('')); // whatever preceded the pop digits must be a word\n      for (let popCount = parseInt(encoded.substring(i, i + popDigitCount), 10); popCount > 0; popCount--) {\n        stack.pop();\n      }\n      i += popDigitCount;\n    } else {\n      stack.push(encoded[i]); // drop down a level into the trie\n      i++;\n    }\n  }\n  return words;\n}\n\n/**\n * An object where each key is a valid DOM Event Name such as `click` or `focus`\n * and each value is an event handler function.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element#events\n * @typedef {?{ [event: string]: Function }} EventListeners\n */\n\n/**\n * All formatted properties required to render a link, including `tagName`,\n * `attributes`, `content` and `eventListeners`.\n * @typedef {{ tagName: any, attributes: {[attr: string]: any}, content: string,\n * eventListeners: EventListeners }} IntermediateRepresentation\n */\n\n/**\n * Specify either an object described by the template type `O` or a function.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `O`\n * @template O\n * @typedef {O | ((value: string, type: string, token: MultiToken) => O)} OptObj\n */\n\n/**\n * Specify either a function described by template type `F` or an object.\n *\n * Each key in the object should be a link type (`'url'`, `'hashtag`', etc.). Each\n * value should be a function with template type `F` that is called when the\n * corresponding link type is encountered.\n * @template F\n * @typedef {F | { [type: string]: F}} OptFn\n */\n\n/**\n * Specify either a value with template type `V`, a function that returns `V` or\n * an object where each value resolves to `V`.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `V`\n *\n * For the object, each key should be a link type (`'url'`, `'hashtag`', etc.).\n * Each value should either have type `V` or a function that returns V. This\n * function similarly takes a string value and a token.\n *\n * Example valid types for `Opt<string>`:\n *\n * ```js\n * 'hello'\n * (value, type, token) => 'world'\n * { url: 'hello', email: (value, token) => 'world'}\n * ```\n * @template V\n * @typedef {V | ((value: string, type: string, token: MultiToken) => V) | { [type: string]: V | ((value: string, token: MultiToken) => V) }} Opt\n */\n\n/**\n * See available options: https://linkify.js.org/docs/options.html\n * @typedef {{\n * \tdefaultProtocol?: string,\n *  events?: OptObj<EventListeners>,\n * \tformat?: Opt<string>,\n * \tformatHref?: Opt<string>,\n * \tnl2br?: boolean,\n * \ttagName?: Opt<any>,\n * \ttarget?: Opt<string>,\n * \trel?: Opt<string>,\n * \tvalidate?: Opt<boolean>,\n * \ttruncate?: Opt<number>,\n * \tclassName?: Opt<string>,\n * \tattributes?: OptObj<({ [attr: string]: any })>,\n *  ignoreTags?: string[],\n * \trender?: OptFn<((ir: IntermediateRepresentation) => any)>\n * }} Opts\n */\n\n/**\n * @type Required<Opts>\n */\nconst defaults = {\n  defaultProtocol: 'http',\n  events: null,\n  format: noop,\n  formatHref: noop,\n  nl2br: false,\n  tagName: 'a',\n  target: null,\n  rel: null,\n  validate: true,\n  truncate: Infinity,\n  className: null,\n  attributes: null,\n  ignoreTags: [],\n  render: null\n};\n\n/**\n * Utility class for linkify interfaces to apply specified\n * {@link Opts formatting and rendering options}.\n *\n * @param {Opts | Options} [opts] Option value overrides.\n * @param {(ir: IntermediateRepresentation) => any} [defaultRender] (For\n *   internal use) default render function that determines how to generate an\n *   HTML element based on a link token's derived tagName, attributes and HTML.\n *   Similar to render option\n */\nfunction Options(opts, defaultRender = null) {\n  let o = assign({}, defaults);\n  if (opts) {\n    o = assign(o, opts instanceof Options ? opts.o : opts);\n  }\n\n  // Ensure all ignored tags are uppercase\n  const ignoredTags = o.ignoreTags;\n  const uppercaseIgnoredTags = [];\n  for (let i = 0; i < ignoredTags.length; i++) {\n    uppercaseIgnoredTags.push(ignoredTags[i].toUpperCase());\n  }\n  /** @protected */\n  this.o = o;\n  if (defaultRender) {\n    this.defaultRender = defaultRender;\n  }\n  this.ignoreTags = uppercaseIgnoredTags;\n}\nOptions.prototype = {\n  o: defaults,\n  /**\n   * @type string[]\n   */\n  ignoreTags: [],\n  /**\n   * @param {IntermediateRepresentation} ir\n   * @returns {any}\n   */\n  defaultRender(ir) {\n    return ir;\n  },\n  /**\n   * Returns true or false based on whether a token should be displayed as a\n   * link based on the user options.\n   * @param {MultiToken} token\n   * @returns {boolean}\n   */\n  check(token) {\n    return this.get('validate', token.toString(), token);\n  },\n  // Private methods\n\n  /**\n   * Resolve an option's value based on the value of the option and the given\n   * params. If operator and token are specified and the target option is\n   * callable, automatically calls the function with the given argument.\n   * @template {keyof Opts} K\n   * @param {K} key Name of option to use\n   * @param {string} [operator] will be passed to the target option if it's a\n   * function. If not specified, RAW function value gets returned\n   * @param {MultiToken} [token] The token from linkify.tokenize\n   * @returns {Opts[K] | any}\n   */\n  get(key, operator, token) {\n    const isCallable = operator != null;\n    let option = this.o[key];\n    if (!option) {\n      return option;\n    }\n    if (typeof option === 'object') {\n      option = token.t in option ? option[token.t] : defaults[key];\n      if (typeof option === 'function' && isCallable) {\n        option = option(operator, token);\n      }\n    } else if (typeof option === 'function' && isCallable) {\n      option = option(operator, token.t, token);\n    }\n    return option;\n  },\n  /**\n   * @template {keyof Opts} L\n   * @param {L} key Name of options object to use\n   * @param {string} [operator]\n   * @param {MultiToken} [token]\n   * @returns {Opts[L] | any}\n   */\n  getObj(key, operator, token) {\n    let obj = this.o[key];\n    if (typeof obj === 'function' && operator != null) {\n      obj = obj(operator, token.t, token);\n    }\n    return obj;\n  },\n  /**\n   * Convert the given token to a rendered element that may be added to the\n   * calling-interface's DOM\n   * @param {MultiToken} token Token to render to an HTML element\n   * @returns {any} Render result; e.g., HTML string, DOM element, React\n   *   Component, etc.\n   */\n  render(token) {\n    const ir = token.render(this); // intermediate representation\n    const renderFn = this.get('render', null, token) || this.defaultRender;\n    return renderFn(ir, token.t, token);\n  }\n};\nfunction noop(val) {\n  return val;\n}\n\nvar options = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tdefaults: defaults,\n\tOptions: Options,\n\tassign: assign\n});\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\n/**\n * @param {string} value\n * @param {Token[]} tokens\n */\nfunction MultiToken(value, tokens) {\n  this.t = 'token';\n  this.v = value;\n  this.tk = tokens;\n}\n\n/**\n * Abstract class used for manufacturing tokens of text tokens. That is rather\n * than the value for a token being a small string of text, it's value an array\n * of text tokens.\n *\n * Used for grouping together URLs, emails, hashtags, and other potential\n * creations.\n * @class MultiToken\n * @property {string} t\n * @property {string} v\n * @property {Token[]} tk\n * @abstract\n */\nMultiToken.prototype = {\n  isLink: false,\n  /**\n   * Return the string this token represents.\n   * @return {string}\n   */\n  toString() {\n    return this.v;\n  },\n  /**\n   * What should the value for this token be in the `href` HTML attribute?\n   * Returns the `.toString` value by default.\n   * @param {string} [scheme]\n   * @return {string}\n   */\n  toHref(scheme) {\n    return this.toString();\n  },\n  /**\n   * @param {Options} options Formatting options\n   * @returns {string}\n   */\n  toFormattedString(options) {\n    const val = this.toString();\n    const truncate = options.get('truncate', val, this);\n    const formatted = options.get('format', val, this);\n    return truncate && formatted.length > truncate ? formatted.substring(0, truncate) + '…' : formatted;\n  },\n  /**\n   *\n   * @param {Options} options\n   * @returns {string}\n   */\n  toFormattedHref(options) {\n    return options.get('formatHref', this.toHref(options.get('defaultProtocol')), this);\n  },\n  /**\n   * The start index of this token in the original input string\n   * @returns {number}\n   */\n  startIndex() {\n    return this.tk[0].s;\n  },\n  /**\n   * The end index of this token in the original input string (up to this\n   * index but not including it)\n   * @returns {number}\n   */\n  endIndex() {\n    return this.tk[this.tk.length - 1].e;\n  },\n  /**\n  \tReturns an object  of relevant values for this token, which includes keys\n  \t* type - Kind of token ('url', 'email', etc.)\n  \t* value - Original text\n  \t* href - The value that should be added to the anchor tag's href\n  \t\tattribute\n  \t\t@method toObject\n  \t@param {string} [protocol] `'http'` by default\n  */\n  toObject(protocol = defaults.defaultProtocol) {\n    return {\n      type: this.t,\n      value: this.toString(),\n      isLink: this.isLink,\n      href: this.toHref(protocol),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   *\n   * @param {Options} options Formatting option\n   */\n  toFormattedObject(options) {\n    return {\n      type: this.t,\n      value: this.toFormattedString(options),\n      isLink: this.isLink,\n      href: this.toFormattedHref(options),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   * Whether this token should be rendered as a link according to the given options\n   * @param {Options} options\n   * @returns {boolean}\n   */\n  validate(options) {\n    return options.get('validate', this.toString(), this);\n  },\n  /**\n   * Return an object that represents how this link should be rendered.\n   * @param {Options} options Formattinng options\n   */\n  render(options) {\n    const token = this;\n    const href = this.toHref(options.get('defaultProtocol'));\n    const formattedHref = options.get('formatHref', href, this);\n    const tagName = options.get('tagName', href, token);\n    const content = this.toFormattedString(options);\n    const attributes = {};\n    const className = options.get('className', href, token);\n    const target = options.get('target', href, token);\n    const rel = options.get('rel', href, token);\n    const attrs = options.getObj('attributes', href, token);\n    const eventListeners = options.getObj('events', href, token);\n    attributes.href = formattedHref;\n    if (className) {\n      attributes.class = className;\n    }\n    if (target) {\n      attributes.target = target;\n    }\n    if (rel) {\n      attributes.rel = rel;\n    }\n    if (attrs) {\n      assign(attributes, attrs);\n    }\n    return {\n      tagName,\n      attributes,\n      content,\n      eventListeners\n    };\n  }\n};\n\n/**\n * Create a new token that can be emitted by the parser state machine\n * @param {string} type readable type of the token\n * @param {object} props properties to assign or override, including isLink = true or false\n * @returns {new (value: string, tokens: Token[]) => MultiToken} new token class\n */\nfunction createTokenClass(type, props) {\n  class Token extends MultiToken {\n    constructor(value, tokens) {\n      super(value, tokens);\n      this.t = type;\n    }\n  }\n  for (const p in props) {\n    Token.prototype[p] = props[p];\n  }\n  Token.t = type;\n  return Token;\n}\n\n/**\n\tRepresents a list of tokens making up a valid email address\n*/\nconst Email = createTokenClass('email', {\n  isLink: true,\n  toHref() {\n    return 'mailto:' + this.toString();\n  }\n});\n\n/**\n\tRepresents some plain text\n*/\nconst Text = createTokenClass('text');\n\n/**\n\tMulti-linebreak token - represents a line break\n\t@class Nl\n*/\nconst Nl = createTokenClass('nl');\n\n/**\n\tRepresents a list of text tokens making up a valid URL\n\t@class Url\n*/\nconst Url = createTokenClass('url', {\n  isLink: true,\n  /**\n  \tLowercases relevant parts of the domain and adds the protocol if\n  \trequired. Note that this will not escape unsafe HTML characters in the\n  \tURL.\n  \t\t@param {string} [scheme] default scheme (e.g., 'https')\n  \t@return {string} the full href\n  */\n  toHref(scheme = defaults.defaultProtocol) {\n    // Check if already has a prefix scheme\n    return this.hasProtocol() ? this.v : `${scheme}://${this.v}`;\n  },\n  /**\n   * Check whether this URL token has a protocol\n   * @return {boolean}\n   */\n  hasProtocol() {\n    const tokens = this.tk;\n    return tokens.length >= 2 && tokens[0].t !== LOCALHOST && tokens[1].t === COLON;\n  }\n});\n\nvar multi = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tMultiToken: MultiToken,\n\tBase: MultiToken,\n\tcreateTokenClass: createTokenClass,\n\tEmail: Email,\n\tText: Text,\n\tNl: Nl,\n\tUrl: Url\n});\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/EmailAddress (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main run\n*/\nconst makeState = arg => new State(arg);\n\n/**\n * Generate the parser multi token-based state machine\n * @param {{ groups: Collections<string> }} tokens\n */\nfunction init$1({\n  groups\n}) {\n  // Types of characters the URL can definitely end in\n  const qsAccepting = groups.domain.concat([AMPERSAND, ASTERISK, AT, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, NUM, PERCENT, PIPE, PLUS, POUND, SLASH, SYM, TILDE, UNDERSCORE]);\n\n  // Types of tokens that can follow a URL and be part of the query string\n  // but cannot be the very last characters\n  // Characters that cannot appear in the URL at all should be excluded\n  const qsNonAccepting = [COLON, COMMA, DOT, EXCLAMATION, PERCENT, QUERY, QUOTE, SEMI, OPENANGLEBRACKET, CLOSEANGLEBRACKET, OPENBRACE, CLOSEBRACE, CLOSEBRACKET, OPENBRACKET, OPENPAREN, CLOSEPAREN, FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN, LEFTCORNERBRACKET, RIGHTCORNERBRACKET, LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET, FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN];\n\n  // For addresses without the mailto prefix\n  // Tokens allowed in the localpart of the email\n  const localpartAccepting = [AMPERSAND, APOSTROPHE, ASTERISK, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, OPENBRACE, CLOSEBRACE, PERCENT, PIPE, PLUS, POUND, QUERY, SLASH, SYM, TILDE, UNDERSCORE];\n\n  // The universal starting state.\n  /**\n   * @type State<Token>\n   */\n  const Start = makeState();\n  const Localpart = tt(Start, TILDE); // Local part of the email address\n  ta(Localpart, localpartAccepting, Localpart);\n  ta(Localpart, groups.domain, Localpart);\n  const Domain = makeState(),\n    Scheme = makeState(),\n    SlashScheme = makeState();\n  ta(Start, groups.domain, Domain); // parsed string ends with a potential domain name (A)\n  ta(Start, groups.scheme, Scheme); // e.g., 'mailto'\n  ta(Start, groups.slashscheme, SlashScheme); // e.g., 'http'\n\n  ta(Domain, localpartAccepting, Localpart);\n  ta(Domain, groups.domain, Domain);\n  const LocalpartAt = tt(Domain, AT); // Local part of the email address plus @\n\n  tt(Localpart, AT, LocalpartAt); // close to an email address now\n\n  // Local part of an email address can be e.g. 'http' or 'mailto'\n  tt(Scheme, AT, LocalpartAt);\n  tt(SlashScheme, AT, LocalpartAt);\n  const LocalpartDot = tt(Localpart, DOT); // Local part of the email address plus '.' (localpart cannot end in .)\n  ta(LocalpartDot, localpartAccepting, Localpart);\n  ta(LocalpartDot, groups.domain, Localpart);\n  const EmailDomain = makeState();\n  ta(LocalpartAt, groups.domain, EmailDomain); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomain, groups.domain, EmailDomain);\n  const EmailDomainDot = tt(EmailDomain, DOT); // domain followed by DOT\n  ta(EmailDomainDot, groups.domain, EmailDomain);\n  const Email$1 = makeState(Email); // Possible email address (could have more tlds)\n  ta(EmailDomainDot, groups.tld, Email$1);\n  ta(EmailDomainDot, groups.utld, Email$1);\n  tt(LocalpartAt, LOCALHOST, Email$1);\n\n  // Hyphen can jump back to a domain name\n  const EmailDomainHyphen = tt(EmailDomain, HYPHEN); // parsed string starts with local email info + @ with a potential domain name\n  tt(EmailDomainHyphen, HYPHEN, EmailDomainHyphen);\n  ta(EmailDomainHyphen, groups.domain, EmailDomain);\n  ta(Email$1, groups.domain, EmailDomain);\n  tt(Email$1, DOT, EmailDomainDot);\n  tt(Email$1, HYPHEN, EmailDomainHyphen);\n\n  // Final possible email states\n  const EmailColon = tt(Email$1, COLON); // URL followed by colon (potential port number here)\n  /*const EmailColonPort = */\n  ta(EmailColon, groups.numeric, Email); // URL followed by colon and port number\n\n  // Account for dots and hyphens. Hyphens are usually parts of domain names\n  // (but not TLDs)\n  const DomainHyphen = tt(Domain, HYPHEN); // domain followed by hyphen\n  const DomainDot = tt(Domain, DOT); // domain followed by DOT\n  tt(DomainHyphen, HYPHEN, DomainHyphen);\n  ta(DomainHyphen, groups.domain, Domain);\n  ta(DomainDot, localpartAccepting, Localpart);\n  ta(DomainDot, groups.domain, Domain);\n  const DomainDotTld = makeState(Url); // Simplest possible URL with no query string\n  ta(DomainDot, groups.tld, DomainDotTld);\n  ta(DomainDot, groups.utld, DomainDotTld);\n  ta(DomainDotTld, groups.domain, Domain);\n  ta(DomainDotTld, localpartAccepting, Localpart);\n  tt(DomainDotTld, DOT, DomainDot);\n  tt(DomainDotTld, HYPHEN, DomainHyphen);\n  tt(DomainDotTld, AT, LocalpartAt);\n  const DomainDotTldColon = tt(DomainDotTld, COLON); // URL followed by colon (potential port number here)\n  const DomainDotTldColonPort = makeState(Url); // TLD followed by a port number\n  ta(DomainDotTldColon, groups.numeric, DomainDotTldColonPort);\n\n  // Long URL with optional port and maybe query string\n  const Url$1 = makeState(Url);\n\n  // URL with extra symbols at the end, followed by an opening bracket\n  const UrlNonaccept = makeState(); // URL followed by some symbols (will not be part of the final URL)\n\n  // Query strings\n  ta(Url$1, qsAccepting, Url$1);\n  ta(Url$1, qsNonAccepting, UrlNonaccept);\n  ta(UrlNonaccept, qsAccepting, Url$1);\n  ta(UrlNonaccept, qsNonAccepting, UrlNonaccept);\n\n  // Become real URLs after `SLASH` or `COLON NUM SLASH`\n  // Here works with or without scheme:// prefix\n  tt(DomainDotTld, SLASH, Url$1);\n  tt(DomainDotTldColonPort, SLASH, Url$1);\n\n  // Note that domains that begin with schemes are treated slighly differently\n  const SchemeColon = tt(Scheme, COLON); // e.g., 'mailto:'\n  const SlashSchemeColon = tt(SlashScheme, COLON); // e.g., 'http:'\n  const SlashSchemeColonSlash = tt(SlashSchemeColon, SLASH); // e.g., 'http:/'\n\n  const UriPrefix = tt(SlashSchemeColonSlash, SLASH); // e.g., 'http://'\n\n  // Scheme states can transition to domain states\n  ta(Scheme, groups.domain, Domain);\n  tt(Scheme, DOT, DomainDot);\n  tt(Scheme, HYPHEN, DomainHyphen);\n  ta(SlashScheme, groups.domain, Domain);\n  tt(SlashScheme, DOT, DomainDot);\n  tt(SlashScheme, HYPHEN, DomainHyphen);\n\n  // Force URL with scheme prefix followed by anything sane\n  ta(SchemeColon, groups.domain, Url$1);\n  tt(SchemeColon, SLASH, Url$1);\n  tt(SchemeColon, QUERY, Url$1);\n  ta(UriPrefix, groups.domain, Url$1);\n  ta(UriPrefix, qsAccepting, Url$1);\n  tt(UriPrefix, SLASH, Url$1);\n  const bracketPairs = [[OPENBRACE, CLOSEBRACE],\n  // {}\n  [OPENBRACKET, CLOSEBRACKET],\n  // []\n  [OPENPAREN, CLOSEPAREN],\n  // ()\n  [OPENANGLEBRACKET, CLOSEANGLEBRACKET],\n  // <>\n  [FULLWIDTHLEFTPAREN, FULLWIDTHRIGHTPAREN],\n  // （）\n  [LEFTCORNERBRACKET, RIGHTCORNERBRACKET],\n  // 「」\n  [LEFTWHITECORNERBRACKET, RIGHTWHITECORNERBRACKET],\n  // 『』\n  [FULLWIDTHLESSTHAN, FULLWIDTHGREATERTHAN] // ＜＞\n  ];\n  for (let i = 0; i < bracketPairs.length; i++) {\n    const [OPEN, CLOSE] = bracketPairs[i];\n    const UrlOpen = tt(Url$1, OPEN); // URL followed by open bracket\n\n    // Continue not accepting for open brackets\n    tt(UrlNonaccept, OPEN, UrlOpen);\n\n    // Closing bracket component. This character WILL be included in the URL\n    tt(UrlOpen, CLOSE, Url$1);\n\n    // URL that beings with an opening bracket, followed by a symbols.\n    // Note that the final state can still be `UrlOpen` (if the URL has a\n    // single opening bracket for some reason).\n    const UrlOpenQ = makeState(Url);\n    ta(UrlOpen, qsAccepting, UrlOpenQ);\n    const UrlOpenSyms = makeState(); // UrlOpen followed by some symbols it cannot end it\n    ta(UrlOpen, qsNonAccepting);\n\n    // URL that begins with an opening bracket, followed by some symbols\n    ta(UrlOpenQ, qsAccepting, UrlOpenQ);\n    ta(UrlOpenQ, qsNonAccepting, UrlOpenSyms);\n    ta(UrlOpenSyms, qsAccepting, UrlOpenQ);\n    ta(UrlOpenSyms, qsNonAccepting, UrlOpenSyms);\n\n    // Close brace/bracket to become regular URL\n    tt(UrlOpenQ, CLOSE, Url$1);\n    tt(UrlOpenSyms, CLOSE, Url$1);\n  }\n  tt(Start, LOCALHOST, DomainDotTld); // localhost is a valid URL state\n  tt(Start, NL, Nl); // single new line\n\n  return {\n    start: Start,\n    tokens: tk\n  };\n}\n\n/**\n * Run the parser state machine on a list of scanned string-based tokens to\n * create a list of multi tokens, each of which represents a URL, email address,\n * plain text, etc.\n *\n * @param {State<MultiToken>} start parser start state\n * @param {string} input the original input used to generate the given tokens\n * @param {Token[]} tokens list of scanned tokens\n * @returns {MultiToken[]}\n */\nfunction run(start, input, tokens) {\n  let len = tokens.length;\n  let cursor = 0;\n  let multis = [];\n  let textTokens = [];\n  while (cursor < len) {\n    let state = start;\n    let secondState = null;\n    let nextState = null;\n    let multiLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    while (cursor < len && !(secondState = state.go(tokens[cursor].t))) {\n      // Starting tokens with nowhere to jump to.\n      // Consider these to be just plain text\n      textTokens.push(tokens[cursor++]);\n    }\n    while (cursor < len && (nextState = secondState || state.go(tokens[cursor].t))) {\n      // Get the next state\n      secondState = null;\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts++;\n      }\n      cursor++;\n      multiLength++;\n    }\n    if (sinceAccepts < 0) {\n      // No accepting state was found, part of a regular text token add\n      // the first text token to the text tokens array and try again from\n      // the next\n      cursor -= multiLength;\n      if (cursor < len) {\n        textTokens.push(tokens[cursor]);\n        cursor++;\n      }\n    } else {\n      // Accepting state!\n      // First close off the textTokens (if available)\n      if (textTokens.length > 0) {\n        multis.push(initMultiToken(Text, input, textTokens));\n        textTokens = [];\n      }\n\n      // Roll back to the latest accepting state\n      cursor -= sinceAccepts;\n      multiLength -= sinceAccepts;\n\n      // Create a new multitoken\n      const Multi = latestAccepting.t;\n      const subtokens = tokens.slice(cursor - multiLength, cursor);\n      multis.push(initMultiToken(Multi, input, subtokens));\n    }\n  }\n\n  // Finally close off the textTokens (if available)\n  if (textTokens.length > 0) {\n    multis.push(initMultiToken(Text, input, textTokens));\n  }\n  return multis;\n}\n\n/**\n * Utility function for instantiating a new multitoken with all the relevant\n * fields during parsing.\n * @param {new (value: string, tokens: Token[]) => MultiToken} Multi class to instantiate\n * @param {string} input original input string\n * @param {Token[]} tokens consecutive tokens scanned from input string\n * @returns {MultiToken}\n */\nfunction initMultiToken(Multi, input, tokens) {\n  const startIdx = tokens[0].s;\n  const endIdx = tokens[tokens.length - 1].e;\n  const value = input.slice(startIdx, endIdx);\n  return new Multi(value, tokens);\n}\n\nconst warn = typeof console !== 'undefined' && console && console.warn || (() => {});\nconst warnAdvice = 'until manual call of linkify.init(). Register all schemes and plugins before invoking linkify the first time.';\n\n// Side-effect initialization state\nconst INIT = {\n  scanner: null,\n  parser: null,\n  tokenQueue: [],\n  pluginQueue: [],\n  customSchemes: [],\n  initialized: false\n};\n\n/**\n * @typedef {{\n * \tstart: State<string>,\n * \ttokens: { groups: Collections<string> } & typeof tk\n * }} ScannerInit\n */\n\n/**\n * @typedef {{\n * \tstart: State<MultiToken>,\n * \ttokens: typeof multi\n * }} ParserInit\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit }) => void} TokenPlugin\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit, parser: ParserInit }) => void} Plugin\n */\n\n/**\n * De-register all plugins and reset the internal state-machine. Used for\n * testing; not required in practice.\n * @private\n */\nfunction reset() {\n  State.groups = {};\n  INIT.scanner = null;\n  INIT.parser = null;\n  INIT.tokenQueue = [];\n  INIT.pluginQueue = [];\n  INIT.customSchemes = [];\n  INIT.initialized = false;\n  return INIT;\n}\n\n/**\n * Register a token plugin to allow the scanner to recognize additional token\n * types before the parser state machine is constructed from the results.\n * @param {string} name of plugin to register\n * @param {TokenPlugin} plugin function that accepts the scanner state machine\n * and available scanner tokens and collections and extends the state machine to\n * recognize additional tokens or groups.\n */\nfunction registerTokenPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid token plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    if (name === INIT.tokenQueue[i][0]) {\n      warn(`linkifyjs: token plugin \"${name}\" already registered - will be overwritten`);\n      INIT.tokenQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.tokenQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register token plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Register a linkify plugin\n * @param {string} name of plugin to register\n * @param {Plugin} plugin function that accepts the parser state machine and\n * extends the parser to recognize additional link types\n */\nfunction registerPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    if (name === INIT.pluginQueue[i][0]) {\n      warn(`linkifyjs: plugin \"${name}\" already registered - will be overwritten`);\n      INIT.pluginQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.pluginQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Detect URLs with the following additional protocol. Anything with format\n * \"protocol://...\" will be considered a link. If `optionalSlashSlash` is set to\n * `true`, anything with format \"protocol:...\" will be considered a link.\n * @param {string} scheme\n * @param {boolean} [optionalSlashSlash]\n */\nfunction registerCustomProtocol(scheme, optionalSlashSlash = false) {\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register custom scheme \"${scheme}\" ${warnAdvice}`);\n  }\n  if (!/^[0-9a-z]+(-[0-9a-z]+)*$/.test(scheme)) {\n    throw new Error(`linkifyjs: incorrect scheme format.\n1. Must only contain digits, lowercase ASCII letters or \"-\"\n2. Cannot start or end with \"-\"\n3. \"-\" cannot repeat`);\n  }\n  INIT.customSchemes.push([scheme, optionalSlashSlash]);\n}\n\n/**\n * Initialize the linkify state machine. Called automatically the first time\n * linkify is called on a string, but may be called manually as well.\n */\nfunction init() {\n  // Initialize scanner state machine and plugins\n  INIT.scanner = init$2(INIT.customSchemes);\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    INIT.tokenQueue[i][1]({\n      scanner: INIT.scanner\n    });\n  }\n\n  // Initialize parser state machine and plugins\n  INIT.parser = init$1(INIT.scanner.tokens);\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    INIT.pluginQueue[i][1]({\n      scanner: INIT.scanner,\n      parser: INIT.parser\n    });\n  }\n  INIT.initialized = true;\n  return INIT;\n}\n\n/**\n * Parse a string into tokens that represent linkable and non-linkable sub-components\n * @param {string} str\n * @return {MultiToken[]} tokens\n */\nfunction tokenize(str) {\n  if (!INIT.initialized) {\n    init();\n  }\n  return run(INIT.parser.start, str, run$1(INIT.scanner.start, str));\n}\ntokenize.scan = run$1; // for testing\n\n/**\n * Find a list of linkable items in the given string.\n * @param {string} str string to find links in\n * @param {string | Opts} [type] either formatting options or specific type of\n * links to find, e.g., 'url' or 'email'\n * @param {Opts} [opts] formatting options for final output. Cannot be specified\n * if opts already provided in `type` argument\n */\nfunction find(str, type = null, opts = null) {\n  if (type && typeof type === 'object') {\n    if (opts) {\n      throw Error(`linkifyjs: Invalid link type ${type}; must be a string`);\n    }\n    opts = type;\n    type = null;\n  }\n  const options = new Options(opts);\n  const tokens = tokenize(str);\n  const filtered = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.isLink && (!type || token.t === type) && options.check(token)) {\n      filtered.push(token.toFormattedObject(options));\n    }\n  }\n  return filtered;\n}\n\n/**\n * Is the given string valid linkable text of some sort. Note that this does not\n * trim the text for you.\n *\n * Optionally pass in a second `type` param, which is the type of link to test\n * for.\n *\n * For example,\n *\n *     linkify.test(str, 'email');\n *\n * Returns `true` if str is a valid email.\n * @param {string} str string to test for links\n * @param {string} [type] optional specific link type to look for\n * @returns boolean true/false\n */\nfunction test(str, type = null) {\n  const tokens = tokenize(str);\n  return tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].t === type);\n}\n\nexport { MultiToken, Options, State, createTokenClass, find, init, multi, options, regexp, registerCustomProtocol, registerPlugin, registerTokenPlugin, reset, stringToArray, test, multi as text, tokenize };\n","import { Options, tokenize as tokenize$1 } from 'linkifyjs';\n\n/**\n * generated from https://raw.githubusercontent.com/w3c/html/26b5126f96f736f796b9e29718138919dd513744/entities.json\n * do not edit\n */\nvar HTML5NamedCharRefs = {\n  // We don't need the complete named character reference because linkifyHtml\n  // does not modify the escape sequences. We do need &nbsp; so that\n  // whitespace is parsed properly. Other types of whitespace should already\n  // be accounted for. &gt; &lt; and &quot; are also frequently relevant ones\n  amp: \"&\",\n  gt: \">\",\n  lt: \"<\",\n  nbsp: \" \",\n  quot: \"\\\"\"\n};\nvar HEXCHARCODE = /^#[xX]([A-Fa-f0-9]+)$/;\nvar CHARCODE = /^#([0-9]+)$/;\nvar NAMED = /^([A-Za-z0-9]+)$/;\nvar EntityParser = /** @class */function () {\n  function EntityParser(named) {\n    this.named = named;\n  }\n  EntityParser.prototype.parse = function (entity) {\n    if (!entity) {\n      return;\n    }\n    var matches = entity.match(HEXCHARCODE);\n    if (matches) {\n      return String.fromCharCode(parseInt(matches[1], 16));\n    }\n    matches = entity.match(CHARCODE);\n    if (matches) {\n      return String.fromCharCode(parseInt(matches[1], 10));\n    }\n    matches = entity.match(NAMED);\n    if (matches) {\n      return this.named[matches[1]] || \"&\" + matches[1] + \";\";\n    }\n  };\n  return EntityParser;\n}();\nvar WSP = /[\\t\\n\\f ]/;\nvar ALPHA = /[A-Za-z]/;\nvar CRLF = /\\r\\n?/g;\nfunction isSpace(char) {\n  return WSP.test(char);\n}\nfunction isAlpha(char) {\n  return ALPHA.test(char);\n}\nfunction preprocessInput(input) {\n  return input.replace(CRLF, '\\n');\n}\nvar EventedTokenizer = /** @class */function () {\n  function EventedTokenizer(delegate, entityParser, mode) {\n    if (mode === void 0) {\n      mode = 'precompile';\n    }\n    this.delegate = delegate;\n    this.entityParser = entityParser;\n    this.mode = mode;\n    this.state = \"beforeData\" /* beforeData */;\n    this.line = -1;\n    this.column = -1;\n    this.input = '';\n    this.index = -1;\n    this.tagNameBuffer = '';\n    this.states = {\n      beforeData: function () {\n        var char = this.peek();\n        if (char === '<' && !this.isIgnoredEndTag()) {\n          this.transitionTo(\"tagOpen\" /* tagOpen */);\n          this.markTagStart();\n          this.consume();\n        } else {\n          if (this.mode === 'precompile' && char === '\\n') {\n            var tag = this.tagNameBuffer.toLowerCase();\n            if (tag === 'pre' || tag === 'textarea') {\n              this.consume();\n            }\n          }\n          this.transitionTo(\"data\" /* data */);\n          this.delegate.beginData();\n        }\n      },\n      data: function () {\n        var char = this.peek();\n        var tag = this.tagNameBuffer;\n        if (char === '<' && !this.isIgnoredEndTag()) {\n          this.delegate.finishData();\n          this.transitionTo(\"tagOpen\" /* tagOpen */);\n          this.markTagStart();\n          this.consume();\n        } else if (char === '&' && tag !== 'script' && tag !== 'style') {\n          this.consume();\n          this.delegate.appendToData(this.consumeCharRef() || '&');\n        } else {\n          this.consume();\n          this.delegate.appendToData(char);\n        }\n      },\n      tagOpen: function () {\n        var char = this.consume();\n        if (char === '!') {\n          this.transitionTo(\"markupDeclarationOpen\" /* markupDeclarationOpen */);\n        } else if (char === '/') {\n          this.transitionTo(\"endTagOpen\" /* endTagOpen */);\n        } else if (char === '@' || char === ':' || isAlpha(char)) {\n          this.transitionTo(\"tagName\" /* tagName */);\n          this.tagNameBuffer = '';\n          this.delegate.beginStartTag();\n          this.appendToTagName(char);\n        }\n      },\n      markupDeclarationOpen: function () {\n        var char = this.consume();\n        if (char === '-' && this.peek() === '-') {\n          this.consume();\n          this.transitionTo(\"commentStart\" /* commentStart */);\n          this.delegate.beginComment();\n        } else {\n          var maybeDoctype = char.toUpperCase() + this.input.substring(this.index, this.index + 6).toUpperCase();\n          if (maybeDoctype === 'DOCTYPE') {\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.transitionTo(\"doctype\" /* doctype */);\n            if (this.delegate.beginDoctype) this.delegate.beginDoctype();\n          }\n        }\n      },\n      doctype: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeDoctypeName\" /* beforeDoctypeName */);\n        }\n      },\n      beforeDoctypeName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          return;\n        } else {\n          this.transitionTo(\"doctypeName\" /* doctypeName */);\n          if (this.delegate.appendToDoctypeName) this.delegate.appendToDoctypeName(char.toLowerCase());\n        }\n      },\n      doctypeName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"afterDoctypeName\" /* afterDoctypeName */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypeName) this.delegate.appendToDoctypeName(char.toLowerCase());\n        }\n      },\n      afterDoctypeName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          return;\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          var nextSixChars = char.toUpperCase() + this.input.substring(this.index, this.index + 5).toUpperCase();\n          var isPublic = nextSixChars.toUpperCase() === 'PUBLIC';\n          var isSystem = nextSixChars.toUpperCase() === 'SYSTEM';\n          if (isPublic || isSystem) {\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n            this.consume();\n          }\n          if (isPublic) {\n            this.transitionTo(\"afterDoctypePublicKeyword\" /* afterDoctypePublicKeyword */);\n          } else if (isSystem) {\n            this.transitionTo(\"afterDoctypeSystemKeyword\" /* afterDoctypeSystemKeyword */);\n          }\n        }\n      },\n      afterDoctypePublicKeyword: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeDoctypePublicIdentifier\" /* beforeDoctypePublicIdentifier */);\n          this.consume();\n        } else if (char === '\"') {\n          this.transitionTo(\"doctypePublicIdentifierDoubleQuoted\" /* doctypePublicIdentifierDoubleQuoted */);\n          this.consume();\n        } else if (char === \"'\") {\n          this.transitionTo(\"doctypePublicIdentifierSingleQuoted\" /* doctypePublicIdentifierSingleQuoted */);\n          this.consume();\n        } else if (char === '>') {\n          this.consume();\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        }\n      },\n      doctypePublicIdentifierDoubleQuoted: function () {\n        var char = this.consume();\n        if (char === '\"') {\n          this.transitionTo(\"afterDoctypePublicIdentifier\" /* afterDoctypePublicIdentifier */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypePublicIdentifier) this.delegate.appendToDoctypePublicIdentifier(char);\n        }\n      },\n      doctypePublicIdentifierSingleQuoted: function () {\n        var char = this.consume();\n        if (char === \"'\") {\n          this.transitionTo(\"afterDoctypePublicIdentifier\" /* afterDoctypePublicIdentifier */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypePublicIdentifier) this.delegate.appendToDoctypePublicIdentifier(char);\n        }\n      },\n      afterDoctypePublicIdentifier: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"betweenDoctypePublicAndSystemIdentifiers\" /* betweenDoctypePublicAndSystemIdentifiers */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else if (char === '\"') {\n          this.transitionTo(\"doctypeSystemIdentifierDoubleQuoted\" /* doctypeSystemIdentifierDoubleQuoted */);\n        } else if (char === \"'\") {\n          this.transitionTo(\"doctypeSystemIdentifierSingleQuoted\" /* doctypeSystemIdentifierSingleQuoted */);\n        }\n      },\n      betweenDoctypePublicAndSystemIdentifiers: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          return;\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else if (char === '\"') {\n          this.transitionTo(\"doctypeSystemIdentifierDoubleQuoted\" /* doctypeSystemIdentifierDoubleQuoted */);\n        } else if (char === \"'\") {\n          this.transitionTo(\"doctypeSystemIdentifierSingleQuoted\" /* doctypeSystemIdentifierSingleQuoted */);\n        }\n      },\n      doctypeSystemIdentifierDoubleQuoted: function () {\n        var char = this.consume();\n        if (char === '\"') {\n          this.transitionTo(\"afterDoctypeSystemIdentifier\" /* afterDoctypeSystemIdentifier */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypeSystemIdentifier) this.delegate.appendToDoctypeSystemIdentifier(char);\n        }\n      },\n      doctypeSystemIdentifierSingleQuoted: function () {\n        var char = this.consume();\n        if (char === \"'\") {\n          this.transitionTo(\"afterDoctypeSystemIdentifier\" /* afterDoctypeSystemIdentifier */);\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          if (this.delegate.appendToDoctypeSystemIdentifier) this.delegate.appendToDoctypeSystemIdentifier(char);\n        }\n      },\n      afterDoctypeSystemIdentifier: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          return;\n        } else if (char === '>') {\n          if (this.delegate.endDoctype) this.delegate.endDoctype();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        }\n      },\n      commentStart: function () {\n        var char = this.consume();\n        if (char === '-') {\n          this.transitionTo(\"commentStartDash\" /* commentStartDash */);\n        } else if (char === '>') {\n          this.delegate.finishComment();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.delegate.appendToCommentData(char);\n          this.transitionTo(\"comment\" /* comment */);\n        }\n      },\n      commentStartDash: function () {\n        var char = this.consume();\n        if (char === '-') {\n          this.transitionTo(\"commentEnd\" /* commentEnd */);\n        } else if (char === '>') {\n          this.delegate.finishComment();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.delegate.appendToCommentData('-');\n          this.transitionTo(\"comment\" /* comment */);\n        }\n      },\n      comment: function () {\n        var char = this.consume();\n        if (char === '-') {\n          this.transitionTo(\"commentEndDash\" /* commentEndDash */);\n        } else {\n          this.delegate.appendToCommentData(char);\n        }\n      },\n      commentEndDash: function () {\n        var char = this.consume();\n        if (char === '-') {\n          this.transitionTo(\"commentEnd\" /* commentEnd */);\n        } else {\n          this.delegate.appendToCommentData('-' + char);\n          this.transitionTo(\"comment\" /* comment */);\n        }\n      },\n      commentEnd: function () {\n        var char = this.consume();\n        if (char === '>') {\n          this.delegate.finishComment();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.delegate.appendToCommentData('--' + char);\n          this.transitionTo(\"comment\" /* comment */);\n        }\n      },\n      tagName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        } else if (char === '/') {\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '>') {\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.appendToTagName(char);\n        }\n      },\n      endTagName: function () {\n        var char = this.consume();\n        if (isSpace(char)) {\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n          this.tagNameBuffer = '';\n        } else if (char === '/') {\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n          this.tagNameBuffer = '';\n        } else if (char === '>') {\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n          this.tagNameBuffer = '';\n        } else {\n          this.appendToTagName(char);\n        }\n      },\n      beforeAttributeName: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.consume();\n          return;\n        } else if (char === '/') {\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n          this.consume();\n        } else if (char === '>') {\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else if (char === '=') {\n          this.delegate.reportSyntaxError('attribute name cannot start with equals sign');\n          this.transitionTo(\"attributeName\" /* attributeName */);\n          this.delegate.beginAttribute();\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        } else {\n          this.transitionTo(\"attributeName\" /* attributeName */);\n          this.delegate.beginAttribute();\n        }\n      },\n      attributeName: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.transitionTo(\"afterAttributeName\" /* afterAttributeName */);\n          this.consume();\n        } else if (char === '/') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '=') {\n          this.transitionTo(\"beforeAttributeValue\" /* beforeAttributeValue */);\n          this.consume();\n        } else if (char === '>') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else if (char === '\"' || char === \"'\" || char === '<') {\n          this.delegate.reportSyntaxError(char + ' is not a valid character within attribute names');\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        } else {\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        }\n      },\n      afterAttributeName: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.consume();\n          return;\n        } else if (char === '/') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '=') {\n          this.consume();\n          this.transitionTo(\"beforeAttributeValue\" /* beforeAttributeValue */);\n        } else if (char === '>') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.transitionTo(\"attributeName\" /* attributeName */);\n          this.delegate.beginAttribute();\n          this.consume();\n          this.delegate.appendToAttributeName(char);\n        }\n      },\n      beforeAttributeValue: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.consume();\n        } else if (char === '\"') {\n          this.transitionTo(\"attributeValueDoubleQuoted\" /* attributeValueDoubleQuoted */);\n          this.delegate.beginAttributeValue(true);\n          this.consume();\n        } else if (char === \"'\") {\n          this.transitionTo(\"attributeValueSingleQuoted\" /* attributeValueSingleQuoted */);\n          this.delegate.beginAttributeValue(true);\n          this.consume();\n        } else if (char === '>') {\n          this.delegate.beginAttributeValue(false);\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.transitionTo(\"attributeValueUnquoted\" /* attributeValueUnquoted */);\n          this.delegate.beginAttributeValue(false);\n          this.consume();\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      attributeValueDoubleQuoted: function () {\n        var char = this.consume();\n        if (char === '\"') {\n          this.delegate.finishAttributeValue();\n          this.transitionTo(\"afterAttributeValueQuoted\" /* afterAttributeValueQuoted */);\n        } else if (char === '&') {\n          this.delegate.appendToAttributeValue(this.consumeCharRef() || '&');\n        } else {\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      attributeValueSingleQuoted: function () {\n        var char = this.consume();\n        if (char === \"'\") {\n          this.delegate.finishAttributeValue();\n          this.transitionTo(\"afterAttributeValueQuoted\" /* afterAttributeValueQuoted */);\n        } else if (char === '&') {\n          this.delegate.appendToAttributeValue(this.consumeCharRef() || '&');\n        } else {\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      attributeValueUnquoted: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        } else if (char === '/') {\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '&') {\n          this.consume();\n          this.delegate.appendToAttributeValue(this.consumeCharRef() || '&');\n        } else if (char === '>') {\n          this.delegate.finishAttributeValue();\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.consume();\n          this.delegate.appendToAttributeValue(char);\n        }\n      },\n      afterAttributeValueQuoted: function () {\n        var char = this.peek();\n        if (isSpace(char)) {\n          this.consume();\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        } else if (char === '/') {\n          this.consume();\n          this.transitionTo(\"selfClosingStartTag\" /* selfClosingStartTag */);\n        } else if (char === '>') {\n          this.consume();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        }\n      },\n      selfClosingStartTag: function () {\n        var char = this.peek();\n        if (char === '>') {\n          this.consume();\n          this.delegate.markTagAsSelfClosing();\n          this.delegate.finishTag();\n          this.transitionTo(\"beforeData\" /* beforeData */);\n        } else {\n          this.transitionTo(\"beforeAttributeName\" /* beforeAttributeName */);\n        }\n      },\n      endTagOpen: function () {\n        var char = this.consume();\n        if (char === '@' || char === ':' || isAlpha(char)) {\n          this.transitionTo(\"endTagName\" /* endTagName */);\n          this.tagNameBuffer = '';\n          this.delegate.beginEndTag();\n          this.appendToTagName(char);\n        }\n      }\n    };\n    this.reset();\n  }\n  EventedTokenizer.prototype.reset = function () {\n    this.transitionTo(\"beforeData\" /* beforeData */);\n    this.input = '';\n    this.tagNameBuffer = '';\n    this.index = 0;\n    this.line = 1;\n    this.column = 0;\n    this.delegate.reset();\n  };\n  EventedTokenizer.prototype.transitionTo = function (state) {\n    this.state = state;\n  };\n  EventedTokenizer.prototype.tokenize = function (input) {\n    this.reset();\n    this.tokenizePart(input);\n    this.tokenizeEOF();\n  };\n  EventedTokenizer.prototype.tokenizePart = function (input) {\n    this.input += preprocessInput(input);\n    while (this.index < this.input.length) {\n      var handler = this.states[this.state];\n      if (handler !== undefined) {\n        handler.call(this);\n      } else {\n        throw new Error(\"unhandled state \" + this.state);\n      }\n    }\n  };\n  EventedTokenizer.prototype.tokenizeEOF = function () {\n    this.flushData();\n  };\n  EventedTokenizer.prototype.flushData = function () {\n    if (this.state === 'data') {\n      this.delegate.finishData();\n      this.transitionTo(\"beforeData\" /* beforeData */);\n    }\n  };\n  EventedTokenizer.prototype.peek = function () {\n    return this.input.charAt(this.index);\n  };\n  EventedTokenizer.prototype.consume = function () {\n    var char = this.peek();\n    this.index++;\n    if (char === '\\n') {\n      this.line++;\n      this.column = 0;\n    } else {\n      this.column++;\n    }\n    return char;\n  };\n  EventedTokenizer.prototype.consumeCharRef = function () {\n    var endIndex = this.input.indexOf(';', this.index);\n    if (endIndex === -1) {\n      return;\n    }\n    var entity = this.input.slice(this.index, endIndex);\n    var chars = this.entityParser.parse(entity);\n    if (chars) {\n      var count = entity.length;\n      // consume the entity chars\n      while (count) {\n        this.consume();\n        count--;\n      }\n      // consume the `;`\n      this.consume();\n      return chars;\n    }\n  };\n  EventedTokenizer.prototype.markTagStart = function () {\n    this.delegate.tagOpen();\n  };\n  EventedTokenizer.prototype.appendToTagName = function (char) {\n    this.tagNameBuffer += char;\n    this.delegate.appendToTagName(char);\n  };\n  EventedTokenizer.prototype.isIgnoredEndTag = function () {\n    var tag = this.tagNameBuffer;\n    return tag === 'title' && this.input.substring(this.index, this.index + 8) !== '</title>' || tag === 'style' && this.input.substring(this.index, this.index + 8) !== '</style>' || tag === 'script' && this.input.substring(this.index, this.index + 9) !== '</script>';\n  };\n  return EventedTokenizer;\n}();\nvar Tokenizer = /** @class */function () {\n  function Tokenizer(entityParser, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.options = options;\n    this.token = null;\n    this.startLine = 1;\n    this.startColumn = 0;\n    this.tokens = [];\n    this.tokenizer = new EventedTokenizer(this, entityParser, options.mode);\n    this._currentAttribute = undefined;\n  }\n  Tokenizer.prototype.tokenize = function (input) {\n    this.tokens = [];\n    this.tokenizer.tokenize(input);\n    return this.tokens;\n  };\n  Tokenizer.prototype.tokenizePart = function (input) {\n    this.tokens = [];\n    this.tokenizer.tokenizePart(input);\n    return this.tokens;\n  };\n  Tokenizer.prototype.tokenizeEOF = function () {\n    this.tokens = [];\n    this.tokenizer.tokenizeEOF();\n    return this.tokens[0];\n  };\n  Tokenizer.prototype.reset = function () {\n    this.token = null;\n    this.startLine = 1;\n    this.startColumn = 0;\n  };\n  Tokenizer.prototype.current = function () {\n    var token = this.token;\n    if (token === null) {\n      throw new Error('token was unexpectedly null');\n    }\n    if (arguments.length === 0) {\n      return token;\n    }\n    for (var i = 0; i < arguments.length; i++) {\n      if (token.type === arguments[i]) {\n        return token;\n      }\n    }\n    throw new Error(\"token type was unexpectedly \" + token.type);\n  };\n  Tokenizer.prototype.push = function (token) {\n    this.token = token;\n    this.tokens.push(token);\n  };\n  Tokenizer.prototype.currentAttribute = function () {\n    return this._currentAttribute;\n  };\n  Tokenizer.prototype.addLocInfo = function () {\n    if (this.options.loc) {\n      this.current().loc = {\n        start: {\n          line: this.startLine,\n          column: this.startColumn\n        },\n        end: {\n          line: this.tokenizer.line,\n          column: this.tokenizer.column\n        }\n      };\n    }\n    this.startLine = this.tokenizer.line;\n    this.startColumn = this.tokenizer.column;\n  };\n  // Data\n  Tokenizer.prototype.beginDoctype = function () {\n    this.push({\n      type: \"Doctype\" /* Doctype */,\n      name: ''\n    });\n  };\n  Tokenizer.prototype.appendToDoctypeName = function (char) {\n    this.current(\"Doctype\" /* Doctype */).name += char;\n  };\n  Tokenizer.prototype.appendToDoctypePublicIdentifier = function (char) {\n    var doctype = this.current(\"Doctype\" /* Doctype */);\n    if (doctype.publicIdentifier === undefined) {\n      doctype.publicIdentifier = char;\n    } else {\n      doctype.publicIdentifier += char;\n    }\n  };\n  Tokenizer.prototype.appendToDoctypeSystemIdentifier = function (char) {\n    var doctype = this.current(\"Doctype\" /* Doctype */);\n    if (doctype.systemIdentifier === undefined) {\n      doctype.systemIdentifier = char;\n    } else {\n      doctype.systemIdentifier += char;\n    }\n  };\n  Tokenizer.prototype.endDoctype = function () {\n    this.addLocInfo();\n  };\n  Tokenizer.prototype.beginData = function () {\n    this.push({\n      type: \"Chars\" /* Chars */,\n      chars: ''\n    });\n  };\n  Tokenizer.prototype.appendToData = function (char) {\n    this.current(\"Chars\" /* Chars */).chars += char;\n  };\n  Tokenizer.prototype.finishData = function () {\n    this.addLocInfo();\n  };\n  // Comment\n  Tokenizer.prototype.beginComment = function () {\n    this.push({\n      type: \"Comment\" /* Comment */,\n      chars: ''\n    });\n  };\n  Tokenizer.prototype.appendToCommentData = function (char) {\n    this.current(\"Comment\" /* Comment */).chars += char;\n  };\n  Tokenizer.prototype.finishComment = function () {\n    this.addLocInfo();\n  };\n  // Tags - basic\n  Tokenizer.prototype.tagOpen = function () {};\n  Tokenizer.prototype.beginStartTag = function () {\n    this.push({\n      type: \"StartTag\" /* StartTag */,\n      tagName: '',\n      attributes: [],\n      selfClosing: false\n    });\n  };\n  Tokenizer.prototype.beginEndTag = function () {\n    this.push({\n      type: \"EndTag\" /* EndTag */,\n      tagName: ''\n    });\n  };\n  Tokenizer.prototype.finishTag = function () {\n    this.addLocInfo();\n  };\n  Tokenizer.prototype.markTagAsSelfClosing = function () {\n    this.current(\"StartTag\" /* StartTag */).selfClosing = true;\n  };\n  // Tags - name\n  Tokenizer.prototype.appendToTagName = function (char) {\n    this.current(\"StartTag\" /* StartTag */, \"EndTag\" /* EndTag */).tagName += char;\n  };\n  // Tags - attributes\n  Tokenizer.prototype.beginAttribute = function () {\n    this._currentAttribute = ['', '', false];\n  };\n  Tokenizer.prototype.appendToAttributeName = function (char) {\n    this.currentAttribute()[0] += char;\n  };\n  Tokenizer.prototype.beginAttributeValue = function (isQuoted) {\n    this.currentAttribute()[2] = isQuoted;\n  };\n  Tokenizer.prototype.appendToAttributeValue = function (char) {\n    this.currentAttribute()[1] += char;\n  };\n  Tokenizer.prototype.finishAttributeValue = function () {\n    this.current(\"StartTag\" /* StartTag */).attributes.push(this._currentAttribute);\n  };\n  Tokenizer.prototype.reportSyntaxError = function (message) {\n    this.current().syntaxError = message;\n  };\n  return Tokenizer;\n}();\nfunction tokenize(input, options) {\n  var tokenizer = new Tokenizer(new EntityParser(HTML5NamedCharRefs), options);\n  return tokenizer.tokenize(input);\n}\n\nconst LinkifyResult = 'LinkifyResult';\nconst StartTag = 'StartTag';\nconst EndTag = 'EndTag';\nconst Chars = 'Chars';\nconst Comment = 'Comment';\nconst Doctype = 'Doctype';\n\n/**\n * @param {string} str html string to link\n * @param {import('linkifyjs').Opts} [opts] linkify options\n * @returns {string} resulting string\n */\nfunction linkifyHtml(str, opts = {}) {\n  // `tokens` and `token` in this section refer to tokens generated by the\n  // HTML parser, not linkify's parser\n  const tokens = tokenize(str);\n  const linkifiedTokens = [];\n  const linkified = [];\n  const options = new Options(opts, defaultRender);\n\n  // Linkify the tokens given by the parser\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.type === StartTag) {\n      linkifiedTokens.push(token);\n\n      // Ignore all the contents of ignored tags\n      const tagName = token.tagName.toUpperCase();\n      const isIgnored = tagName === 'A' || options.ignoreTags.indexOf(tagName) >= 0;\n      if (!isIgnored) {\n        continue;\n      }\n      let preskipLen = linkifiedTokens.length;\n      skipTagTokens(tagName, tokens, ++i, linkifiedTokens);\n      i += linkifiedTokens.length - preskipLen - 1;\n    } else if (token.type !== Chars) {\n      // Skip this token, it's not important\n      linkifiedTokens.push(token);\n    } else {\n      // Valid text token, linkify it!\n      const linkifedChars = linkifyChars(token.chars, options);\n      linkifiedTokens.push.apply(linkifiedTokens, linkifedChars);\n    }\n  }\n\n  // Convert the tokens back into a string\n  for (let i = 0; i < linkifiedTokens.length; i++) {\n    const token = linkifiedTokens[i];\n    switch (token.type) {\n      case LinkifyResult:\n        linkified.push(token.rendered);\n        break;\n      case StartTag:\n        {\n          let link = '<' + token.tagName;\n          if (token.attributes.length > 0) {\n            link += ' ' + attributeArrayToStrings(token.attributes).join(' ');\n          }\n          if (token.selfClosing) {\n            link += ' /';\n          }\n          link += '>';\n          linkified.push(link);\n          break;\n        }\n      case EndTag:\n        linkified.push(`</${token.tagName}>`);\n        break;\n      case Chars:\n        linkified.push(escapeText(token.chars));\n        break;\n      case Comment:\n        linkified.push(`<!--${escapeText(token.chars)}-->`);\n        break;\n      case Doctype:\n        {\n          let doctype = `<!DOCTYPE ${token.name}`;\n          if (token.publicIdentifier) {\n            doctype += ` PUBLIC \"${token.publicIdentifier}\"`;\n          }\n          if (token.systemIdentifier) {\n            doctype += ` \"${token.systemIdentifier}\"`;\n          }\n          doctype += '>';\n          linkified.push(doctype);\n          break;\n        }\n    }\n  }\n  return linkified.join('');\n}\n\n/**\n\t`tokens` and `token` in this section referes to tokens returned by\n\t`linkify.tokenize`. `linkified` will contain HTML Parser-style tokens\n\t@param {string}\n\t@param {import('linkifyjs').Options}\n*/\nfunction linkifyChars(str, options) {\n  const tokens = tokenize$1(str);\n  const result = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.t === 'nl' && options.get('nl2br')) {\n      result.push({\n        type: StartTag,\n        tagName: 'br',\n        attributes: [],\n        selfClosing: true\n      });\n    } else if (!token.isLink || !options.check(token)) {\n      result.push({\n        type: Chars,\n        chars: token.toString()\n      });\n    } else {\n      result.push({\n        type: LinkifyResult,\n        rendered: options.render(token)\n      });\n    }\n  }\n  return result;\n}\n\n/**\n\tReturns a list of tokens skipped until the closing tag of tagName.\n\n\t* `tagName` is the closing tag which will prompt us to stop skipping\n\t* `tokens` is the array of tokens generated by HTML5Tokenizer which\n\t* `i` is the index immediately after the opening tag to skip\n\t* `skippedTokens` is an array which skipped tokens are being pushed into\n\n\tCaveats\n\n\t* Assumes that i is the first token after the given opening tagName\n\t* The closing tag will be skipped, but nothing after it\n\t* Will track whether there is a nested tag of the same type\n*/\nfunction skipTagTokens(tagName, tokens, i, skippedTokens) {\n  // number of tokens of this type on the [fictional] stack\n  let stackCount = 1;\n  while (i < tokens.length && stackCount > 0) {\n    let token = tokens[i];\n    if (token.type === StartTag && token.tagName.toUpperCase() === tagName) {\n      // Nested tag of the same type, \"add to stack\"\n      stackCount++;\n    } else if (token.type === EndTag && token.tagName.toUpperCase() === tagName) {\n      // Closing tag\n      stackCount--;\n    }\n    skippedTokens.push(token);\n    i++;\n  }\n\n  // Note that if stackCount > 0 here, the HTML is probably invalid\n  return skippedTokens;\n}\nfunction defaultRender({\n  tagName,\n  attributes,\n  content\n}) {\n  return `<${tagName} ${attributesToString(attributes)}>${escapeText(content)}</${tagName}>`;\n}\nfunction escapeText(text) {\n  return text.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\nfunction escapeAttr(attr) {\n  return attr.replace(/\"/g, '&quot;');\n}\nfunction attributesToString(attributes) {\n  const result = [];\n  for (const attr in attributes) {\n    const val = attributes[attr] + '';\n    result.push(`${attr}=\"${escapeAttr(val)}\"`);\n  }\n  return result.join(' ');\n}\nfunction attributeArrayToStrings(attrs) {\n  const attrStrs = [];\n  for (let i = 0; i < attrs.length; i++) {\n    const name = attrs[i][0];\n    const value = attrs[i][1] + '';\n    attrStrs.push(`${name}=\"${escapeAttr(value)}\"`);\n  }\n  return attrStrs;\n}\n\nexport { linkifyHtml as default };\n",".ticker-timeline__headline {\n  margin: 0;\n  padding-top: 1rem;\n  padding-bottom: 0rem;\n}\n\n.ticker-timeline__subheadline {\n  padding-bottom: 1rem;\n  margin-top: 0rem;\n  margin-bottom: 0rem;\n  border-bottom: 1px solid #000;\n}\n\n.ticker-timeline__entry {\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  border-bottom: 1px solid #000;\n}\n\n.ticker-timeline__entry:last-child {\n  border-bottom: none;\n}\n\n.ticker-timeline__paragraph {\n  margin: 0;\n  padding-top: 0;\n  padding-bottom: 0.75rem;\n}\n\n.ticker-timeline__attachment {\n  margin-bottom: 0.5rem;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n}\n\n.ticker-timeline__attachment img {\n  max-width: 100%;\n  height: auto;\n}\n\n.ticker-timeline__date {\n  font-size: 0.75rem;\n}\n","import { Component, Host, Prop, State, h } from '@stencil/core';\nimport { format, formatDistance } from 'date-fns';\nimport linkifyHtml from 'linkify-html';\n\ntype Response = {\n  data: MessageResponse;\n  status: string;\n};\n\ntype MessageResponse = {\n  messages: Array<Message>;\n};\n\ntype Message = {\n  id: number;\n  createdAt: string;\n  text: string;\n  geoInformation: string;\n  attachments: Array<Attachment>;\n};\n\ntype Attachment = {\n  url: string;\n  contentType: string;\n};\n\n@Component({\n  tag: 'ticker-timeline',\n  styleUrl: 'ticker-timeline.css',\n  shadow: false,\n})\nexport class TickerTimeline {\n  @State() items: Array<Message> = [];\n  @State() error: string = '';\n\n  @Prop() header: string = '';\n\n  @Prop() origin: string;\n\n  @Prop() apiUrl: string = 'https://ticker-api.systemli.org';\n\n  @Prop() limit: number = 10;\n\n  async connectedCallback() {\n    fetch(`${this.apiUrl}/v1/timeline?origin=${this.origin}&limit=${this.limit}`)\n      .then(response => response.json())\n      .then((response: Response) => {\n        this.items = response.data.messages;\n      })\n      .catch(error => {\n        this.error = error.message;\n      });\n  }\n\n  headline(header: string) {\n    if (header === '') {\n      return;\n    }\n\n    return (\n      <div>\n        <h2 class=\"ticker-timeline__headline\">{header}</h2>\n        <p class=\"ticker-timeline__subheadline\">\n          from <a href={this.origin}>{this.origin.replace(/https?:\\/\\//, '')}</a>\n        </p>\n      </div>\n    );\n  }\n\n  attachments(attachments: Array<Attachment>) {\n    return (\n      <div>\n        {attachments.map(attachment => (\n          <div class=\"ticker-timeline__attachment\">\n            <img src={attachment.url} />\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  content(text: string) {\n    const div = document.createElement('div');\n    div.className = 'ticker-timeline__content';\n\n    text.split('\\n').forEach(paragraph => {\n      const p = document.createElement('p');\n      p.innerHTML = linkifyHtml(paragraph, {\n        format: (value, type) => {\n          if (type === 'url' && value.length > 30) {\n            value = value.slice(0, 30) + '…';\n          }\n          return value;\n        },\n      });\n      div.appendChild(p);\n    });\n\n    return <div innerHTML={div.innerHTML}></div>;\n  }\n\n  render() {\n    if (this.error !== '') {\n      return (\n        <Host class=\"ticker-timeline\">\n          {this.headline(this.header)}\n          <div class=\"ticker-timeline__error\">\n            <p>Sorry, unable to fetch messages.</p>\n          </div>\n        </Host>\n      );\n    }\n\n    if (this.items.length === 0) {\n      return (\n        <Host class=\"ticker-timeline\">\n          {this.headline(this.header)}\n          <div class=\"ticker-timeline__error\">\n            <p>No messages found.</p>\n          </div>\n        </Host>\n      );\n    }\n\n    return (\n      <Host class=\"ticker-timeline\">\n        {this.headline(this.header)}\n        {this.items.map(item => (\n          <div class=\"ticker-timeline__entry\">\n            {this.content(item.text)}\n            {item.attachments !== null && this.attachments(item.attachments)}\n            <time class=\"ticker-timeline__date\" dateTime={item.createdAt} title={format(new Date(item.createdAt), 'MMM d, y h:mm')}>\n              {formatDistance(new Date(item.createdAt), new Date(), { addSuffix: true })}\n            </time>\n          </div>\n        ))}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}